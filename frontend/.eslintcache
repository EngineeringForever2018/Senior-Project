[{"/home/noahwong/Desktop/avpd-main/frontend/src/index.js":"1","/home/noahwong/Desktop/avpd-main/frontend/src/reportWebVitals.js":"2","/home/noahwong/Desktop/avpd-main/frontend/src/App.js":"3","/home/noahwong/Desktop/avpd-main/frontend/src/auth/auth0-provider-with-history.js":"4","/home/noahwong/Desktop/avpd-main/frontend/src/Home.js":"5","/home/noahwong/Desktop/avpd-main/frontend/src/About.js":"6","/home/noahwong/Desktop/avpd-main/frontend/src/instructor/InstructorHome.js":"7","/home/noahwong/Desktop/avpd-main/frontend/src/student/StudentHome.js":"8","/home/noahwong/Desktop/avpd-main/frontend/src/requests.js":"9","/home/noahwong/Desktop/avpd-main/frontend/src/nav/NavBar.js":"10","/home/noahwong/Desktop/avpd-main/frontend/src/utils.js":"11","/home/noahwong/Desktop/avpd-main/frontend/src/user/login-button.js":"12","/home/noahwong/Desktop/avpd-main/frontend/src/user/logout-button.js":"13","/home/noahwong/Desktop/avpd-main/frontend/src/student/PostSubmit.js":"14","/home/noahwong/Desktop/avpd-main/frontend/src/Message/MessageHome.js":"15","/home/noahwong/Desktop/avpd-main/frontend/src/instructor/InstructorClassroom.js":"16","/home/noahwong/Desktop/avpd-main/frontend/src/instructor/InstructorAssignment.js":"17","/home/noahwong/Desktop/avpd-main/frontend/src/student/StudentAssignment.js":"18","/home/noahwong/Desktop/avpd-main/frontend/src/instructor/InstructorNameList.js":"19","/home/noahwong/Desktop/avpd-main/frontend/src/instructor/InstructorSubmissions.js":"20","/home/noahwong/Desktop/avpd-main/frontend/src/student/PostSubmitList.js":"21"},{"size":730,"mtime":1613439891000,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1613439891000,"results":"24","hashOfConfig":"23"},{"size":2377,"mtime":1615944398699,"results":"25","hashOfConfig":"23"},{"size":833,"mtime":1613439891000,"results":"26","hashOfConfig":"23"},{"size":1286,"mtime":1615502909292,"results":"27","hashOfConfig":"23"},{"size":117,"mtime":1613439891000,"results":"28","hashOfConfig":"23"},{"size":3389,"mtime":1615502784434,"results":"29","hashOfConfig":"23"},{"size":3952,"mtime":1615502840605,"results":"30","hashOfConfig":"23"},{"size":7234,"mtime":1615940831958,"results":"31","hashOfConfig":"23"},{"size":1174,"mtime":1614392506666,"results":"32","hashOfConfig":"23"},{"size":284,"mtime":1613439891000,"results":"33","hashOfConfig":"23"},{"size":327,"mtime":1613439891000,"results":"34","hashOfConfig":"23"},{"size":375,"mtime":1613439891000,"results":"35","hashOfConfig":"23"},{"size":2828,"mtime":1615950601059,"results":"36","hashOfConfig":"23"},{"size":0,"mtime":1614392743297,"results":"37","hashOfConfig":"23"},{"size":8052,"mtime":1615504412350,"results":"38","hashOfConfig":"23"},{"size":7051,"mtime":1615505046627,"results":"39","hashOfConfig":"23"},{"size":3647,"mtime":1615954604904,"results":"40","hashOfConfig":"23"},{"size":2608,"mtime":1615505538812,"results":"41","hashOfConfig":"23"},{"size":2249,"mtime":1615506875242,"results":"42","hashOfConfig":"23"},{"size":2615,"mtime":1615944414947,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"18danex",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/noahwong/Desktop/avpd-main/frontend/src/index.js",[],["94","95"],"/home/noahwong/Desktop/avpd-main/frontend/src/reportWebVitals.js",[],"/home/noahwong/Desktop/avpd-main/frontend/src/App.js",["96"],"/home/noahwong/Desktop/avpd-main/frontend/src/auth/auth0-provider-with-history.js",[],"/home/noahwong/Desktop/avpd-main/frontend/src/Home.js",[],"/home/noahwong/Desktop/avpd-main/frontend/src/About.js",[],"/home/noahwong/Desktop/avpd-main/frontend/src/instructor/InstructorHome.js",["97","98"],"import './InstructorHome.scss'\nimport React, {useEffect, useState} from \"react\";\nimport {useAuth0} from \"@auth0/auth0-react\";\nimport {useHistory} from \"react-router-dom\";\nimport {NavBar} from \"../nav/NavBar\";\nimport {getUserInfo, listClassroom, createClassroom} from \"../requests\";\n\nexport function InstructorHome(props) {\n  return (\n    <div>\n      <Classrooms/>\n    </div>\n  )\n}\n\nfunction Classrooms() {\n  const {getAccessTokenSilently} = useAuth0();\n  const history = useHistory()\n\n  const [classroomTitles, setClassroomTitles] = useState();\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      listClassroom(token).then((response) => {\n        setClassroomTitles(\n          response.data.map((data) => <li>\n            <button className=\"list-btn\" onClick={() => {\n              history.push(`/instructor/classrooms/${data['id']}`)\n            }}>\n              {data['title']}\n            </button>\n          </li>)\n        )\n      })\n      getUserInfo(token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n    })\n  }, [])\n\n  return (\n    <div>\n      <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n\n      <div className=\"Instructor-Classrooms\">\n        <div className=\"background\">\n          <div className=\"title\">\n            <p className=\"text\">Instructor Home</p>\n          </div>\n          <div className=\"scroll\">\n            <ul className=\"list-titles\">\n              {classroomTitles}\n            </ul>\n          </div>\n          <div className=\"options\">\n            <button onClick={() => {  history.push('/create-classroom')}}>\n              Create Classroom\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport function CreateClassroomForm() {\n  const {getAccessTokenSilently} = useAuth0();\n  const history = useHistory()\n\n  const [title, setTitle] = useState(\"\");\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n\n  function handleChange(event) {\n    setTitle(event.target.value);\n  }\n\n  function handleSubmit(event) {\n    getAccessTokenSilently().then((token) => {\n      createClassroom(title, token).then((response) => {\n        history.push('/')\n      }, (error) => console.log(error.response))\n    })\n\n    event.preventDefault()\n  }\n\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      getUserInfo(token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n    })\n  }, [])\n\n  return (\n  <div>\n    <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n\n    <div className=\"Instructor-Classroom-Create\">\n      <div className=\"form-background\">\n        <div className=\"form-title\">\n          <p className=\"form-text\">Create Classroom</p>\n        </div>\n\n        <form onSubmit={handleSubmit}>\n          <label>\n            Title: <input type=\"text\" value={title} onChange={handleChange}/>\n          </label>\n          <input type=\"submit\" value=\"Submit\"/>\n        </form>\n      </div>\n    </div>\n  </div>\n  )\n}","/home/noahwong/Desktop/avpd-main/frontend/src/student/StudentHome.js",["99","100"],"import './StudentHome.scss'\nimport {NavBar} from \"../nav/NavBar\";\n\nimport React, {useEffect, useState} from \"react\";\n\nimport {useAuth0} from \"@auth0/auth0-react\";\nimport {useHistory} from \"react-router-dom\";\nimport {getUserInfo, listAssignmentsStudent, joinClassroom} from \"../requests\";\n\nexport function StudentHome(props) {\n  return (\n    <div>\n      <NavBar firstName={props.userData['first_name']} lastName={props.userData['last_name']}/>\n      <Essay />\n    </div>\n  )\n}\n\n//load all essays\nfunction Essay() {\n  const {getAccessTokenSilently} = useAuth0();\n  const history = useHistory()\n  const [essaysTitles, setEssaysTitles] = useState();\n  const [classNumber, setClassNumber] = useState(1);\n\n  function handleSetClassNumber(e) {\n    setClassNumber(e.target.value);\n  }\n\n  //used for scroll down menu for classes\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      listAssignmentsStudent(token, classNumber).then((response) => {\n        setEssaysTitles(\n          response.data.map((data) => <li>\n            <button className=\"assignment-btn\" onClick={() => {\n              history.push(`/student/classrooms/${classNumber}/assignments/${data['id']}`)\n            }}>\n              {data['title']}\n            </button>\n          </li>)\n        )\n      })\n    })\n  }, [classNumber])\n\n  return (\n    <div className = \"Assignments\">\n      <div className = \"background\">\n        <div className = \"Text\">\n          {/*no command for student to get classes to temporary hard code */}\n          <label>Class number input: </label>\n          <select defaultValue={classNumber} onChange={handleSetClassNumber}>\n            <option value = \"1\" > class 1 </option>\n            <option value = \"2\"> class 2 </option>\n            <option value = \"3\"> class 3 </option>\n            <option value = \"10\"> class 10 </option>\n          </select>\n        </div>\n\n        <div className=\"assignment-title\">\n          <div className=\"assignment-background\">\n            <p className=\"assignment-text\">list of assignments</p>\n          </div>\n          <div className=\"assignment-scroll\">\n            <ul className=\"assignment-name\">\n              {essaysTitles}\n            </ul>\n          </div>\n        </div>\n\n        <div>\n        <button onClick={() => {  history.push('/join-classroom')}}>\n          Join Classroom\n        </button>\n\n        </div>\n      </div>\n    </div>\n  )\n}\n\n//function to create assignment\nexport function JoinClassroomForm(props) {\n  const {getAccessTokenSilently} = useAuth0()\n\n  const [id, setID] = useState()\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n\n  const history = useHistory()\n\n  function handleIDChange(event) {\n    setID(event.target.value);\n  }\n\n  function handleSubmit(event) {\n    getAccessTokenSilently().then((token) => {\n      joinClassroom(id, token).then((response) => {\n        history.push('/')\n      }, (error) => console.log(error.response))\n    })\n\n    event.preventDefault()\n  }\n  \n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      getUserInfo(id , token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n    })\n  }, [])\n\n  return (\n    <div>\n      <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n\n      <div className=\"Instructor-Assignment-Create\">\n        <div className=\"form-background\">\n          <div className=\"form-title\">\n            <p className=\"form-text\">Join Classroom</p>\n          </div>\n\n          <form onSubmit={handleSubmit}>\n            <label>\n              classNumber: \n              <input type=\"number\" value={id} onChange={handleIDChange}/>\n            </label>\n            <div>\n              <input type=\"submit\" value=\"Submit\"/>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}","/home/noahwong/Desktop/avpd-main/frontend/src/requests.js",[],"/home/noahwong/Desktop/avpd-main/frontend/src/nav/NavBar.js",[],"/home/noahwong/Desktop/avpd-main/frontend/src/utils.js",["101"],"import {useAuth0} from \"@auth0/auth0-react\";\n\nexport function serverUrl() {\n  return process.env.REACT_APP_SERVER_URL;\n}\n\nexport async function authenticateRequest(requestConfig, token) {\n  requestConfig.headers = {\n    'Authorization': `Bearer ${token}`\n  }\n\n  return requestConfig\n}","/home/noahwong/Desktop/avpd-main/frontend/src/user/login-button.js",[],"/home/noahwong/Desktop/avpd-main/frontend/src/user/logout-button.js",[],"/home/noahwong/Desktop/avpd-main/frontend/src/student/PostSubmit.js",["102","103","104"],"/home/noahwong/Desktop/avpd-main/frontend/src/Message/MessageHome.js",[],"/home/noahwong/Desktop/avpd-main/frontend/src/instructor/InstructorClassroom.js",["105","106","107"],"import './InstructorClassrooms.scss'\nimport React, {useEffect, useState} from \"react\";\nimport {NavBar} from \"../nav/NavBar\";\nimport {getUserInfo, viewClassroom, listAssignments, createAssignment, deleteClassroom, updateClassroom} from \"../requests\";\nimport {useHistory, useLocation, useParams} from \"react-router\";\nimport {useAuth0} from \"@auth0/auth0-react\";\n\nexport function InstructorClassroom() {\n  const {getAccessTokenSilently} = useAuth0()\n  const history = useHistory()\n  const {id} = useParams()\n\n  const [assignmentTitles, setAssignmentTitles] = useState()\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n  const [classInfo, setClassinfo] = useState({\n    title:''\n  })\n\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      listAssignments(id, token).then((response) => {\n        setAssignmentTitles(\n          response.data.map((assignment) => <li>\n            <button className=\"list-btn\" onClick={() => {\n              history.push(`/instructor/classrooms/${id}/assignments/${assignment['id']}`)\n            }}>\n              {assignment['title']}\n            </button>\n          </li>)\n        )\n      })\n      getUserInfo(token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n      viewClassroom(id, token).then((response) => {\n        setClassinfo(prevState => ({\n          ...prevState,\n          title: response.data.title,\n        }));\n      })\n    })\n  }, [])\n\n  return (\n    <div>\n      <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n\n        <div className=\"Instructor-Assignment\">\n          <div className=\"background\">\n            <div className=\"title\">\n              <p className=\"text\">Classroom: {classInfo.title}</p>\n            </div>\n\n            <div className=\"scroll\">\n              <ul className=\"titles\">\n                {assignmentTitles}\n              </ul>\n            </div>\n\n            <div className=\"options\">\n\n              <button onClick={() => {\n                history.push(`/update-classroom`, {classID: id})\n              }}>Update Classroom</button>\n\n              <button onClick={() => {\n                history.push(`/instructor/classrooms/${id}/students`, {classroomID: id})\n              }}>List Students</button>\n\n              <button onClick={() => {\n                getAccessTokenSilently().then((token) => {\n                deleteClassroom(id, token).then(() => history.push('/'), (error) => console.log(error.response))\n                }, (error) => console.log(error))\n              }}>Delete</button>\n\n              <button onClick={() => {\n                history.push(`/create-assignment`, {classroomID: id})\n              }}>Create Assignment</button>\n\n            </div>\n          </div>\n        </div>\n    </div>\n  )\n}\n\n//form to update classroom\nexport function UpdateClassroomForm() {\n  const {getAccessTokenSilently} = useAuth0();\n  const history = useHistory()\n  const location = useLocation()\n  const id = location.state.classID\n\n  const [title, setTitle] = useState(\"\");\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n\n  function handleChange(event) {\n    setTitle(event.target.value);\n  }\n\n  function handleSubmit(event) {\n    getAccessTokenSilently().then((token) => {\n      updateClassroom(title, id, token).then((response) => {\n        history.push('/')\n      }, (error) => console.log(error.response))\n    })\n\n    event.preventDefault()\n  }\n\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      getUserInfo(token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n    })\n  }, [])\n\n  return (\n  <div>\n    <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n\n    <div className=\"Instructor-Classroom-Create\">\n      <div className=\"form-background\">\n        <div className=\"form-title\">\n          <p className=\"form-text\">Update Classroom</p>\n        </div>\n\n        <form onSubmit={handleSubmit}>\n          <label>\n            Title: <input type=\"text\" value={title} onChange={handleChange}/>\n          </label>\n          <input type=\"submit\" value=\"Submit\"/>\n        </form>\n      </div>\n    </div>\n  </div>\n  )\n}\n\n//function to create assignment\nexport function CreateAssignmentForm(props) {\n  const location = useLocation()\n  const id = location.state.classroomID\n\n  const [title, setTitle] = useState(\"\")\n  const [description, setDescription] = useState(\"\")\n  const [dueYear, setDueYear] = useState(\"\")\n  const [dueMonth, setDueMonth] = useState(\"\")\n  const [dueDay, setDueDay] = useState(\"\")\n  const [dueHour, setDueHour] = useState(\"\")\n  const [dueMinute, setDueMinute] = useState(\"\")\n  const {getAccessTokenSilently} = useAuth0()\n\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n\n  const history = useHistory()\n\n  function handleTitleChange(event) {\n    setTitle(event.target.value);\n  }\n\n  function handleDescriptionChange(event) {\n    setDescription(event.target.value)\n  }\n\n  function handleDueYearChange(event) {\n    setDueYear(event.target.value)\n  }\n\n  function handleDueMonthChange(event) {\n    setDueMonth(event.target.value)\n  }\n\n  function handleDueDayChange(event) {\n    setDueDay(event.target.value)\n  }\n\n  function handleDueHourChange(event) {\n    setDueHour(event.target.value)\n  }\n\n  function handleDueMinuteChange(event) {\n    setDueMinute(event.target.value)\n  }\n\n  function handleSubmit(event) {\n    getAccessTokenSilently().then((token) => {\n      createAssignment(id, title, description, {\n        'year': parseInt(dueYear),\n        'month': parseInt(dueMonth),\n        'day': parseInt(dueDay),\n        'hour': parseInt(dueHour),\n        'minute': parseInt(dueMinute)\n      }, token).then((response) => {\n        history.push(`/instructor/classrooms/${id}`)\n      }, (error) => console.log(error.response))\n    })\n\n    event.preventDefault()\n  }\n\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      getUserInfo(token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n    })\n  }, [])\n\n  return (\n    <div>\n      <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n\n      <div className=\"Instructor-Assignment-Create\">\n        <div className=\"form-background\">\n          <div className=\"form-title\">\n            <p className=\"form-text\">Create Assignment</p>\n          </div>\n\n          <form onSubmit={handleSubmit}>\n            <label>\n              Title:\n              <input type=\"text\" value={title} onChange={handleTitleChange}/>\n            </label>\n            <div/>\n            <label>\n              Description:\n              <input type=\"text\" value={description} onChange={handleDescriptionChange}/>\n            </label>\n            <p>Due Date:</p>\n            <label>\n              Year:\n              <input type=\"text\" value={dueYear} onChange={handleDueYearChange}/>\n            </label>\n            <label>\n              Month:\n              <input type=\"text\" value={dueMonth} onChange={handleDueMonthChange}/>\n            </label>\n            <label>\n              Day:\n              <input type=\"text\" value={dueDay} onChange={handleDueDayChange}/>\n            </label>\n            <label>\n              Hour:\n             <input type=\"text\" value={dueHour} onChange={handleDueHourChange}/>\n            </label>\n            <label>\n              Minute:\n              <input type=\"text\" value={dueMinute} onChange={handleDueMinuteChange}/>\n            </label>\n            <div>\n              <input type=\"submit\" value=\"Submit\"/>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}","/home/noahwong/Desktop/avpd-main/frontend/src/instructor/InstructorAssignment.js",["108","109"],"import './InstructorAssignment.scss'\nimport React, {useEffect, useState} from \"react\";\nimport {NavBar} from \"../nav/NavBar\";\nimport {getUserInfo, deleteAssignment, updateAssignment, viewAssignment} from \"../requests\";\nimport {useHistory, useLocation, useParams} from \"react-router\";\nimport {useAuth0} from \"@auth0/auth0-react\";\n\nexport function InstructorAssignment() {\n  const {getAccessTokenSilently} = useAuth0()\n  const history = useHistory()\n  const {classroomID, id} = useParams()\n\n  const [assignmentTitles, setAssignmentTitles] = useState({\n    id: '',\n    classroom: '',\n    title: '',\n    description: '',\n    due_date: ''\n  })\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      viewAssignment( classroomID,id, token).then((response) => {\n        setAssignmentTitles(prevState => ({\n          ...prevState,\n          id: response.data.id,\n          classroom: response.data.classroom,\n          title: response.data.title,\n          description: response.data.description,\n          due_date: response.data.due_date\n        }));\n      })\n      getUserInfo(token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n    })\n  }, [])\n\n  return (\n    <div>\n      <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n\n      <div className = \"Instructor-Assignment-Info\">\n        <div className=\"background\">\n          <div className=\"title\">\n            <p className=\"text\">Assignment Info</p>\n          </div>\n\n          <div className=\"body-text\">\n            <p className = \"text\"> title: {assignmentTitles.title}</p>\n            <p className = \"text\"> due date: {assignmentTitles.due_date}</p>\n            <p className = \"text\"> description: {assignmentTitles.description}</p>\n          </div>\n\n          <div className=\"options-test\">\n\n            <button onClick={() => {\n              history.push(`/instructor/classrooms/${classroomID}/assignments/${id}/submissions`)\n            }}>List Submissions</button>\n\n            <button onClick={() => {\n              getAccessTokenSilently().then((token) => {\n              deleteAssignment(classroomID, id, token).then(() =>\n              history.push('/instructor/classroom/1'), (error) => console.log(error.response))\n              }, (error) => console.log(error))\n            }}>Delete</button>\n\n            <button onClick={() => {\n              history.push('/update-assignment', \n              {classroomID: assignmentTitles.id,\n              assignmentID: assignmentTitles.classroom})\n            }}>Update Assignment</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport function UpdateAssignmentForm(props) {\n  const location = useLocation()\n\n  const Cid = location.state.classroomID\n  const Aid = location.state.assignmentID\n\n  const [assignmentTitles, setAssignmentTitles] = useState({\n    id: '',\n    classroom: '',\n    title: '',\n    description: '',\n    due_date: ''\n  })\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      viewAssignment( Cid, Aid, token).then((response) => {\n        setAssignmentTitles(prevState => ({\n          ...prevState,\n          id: response.data.id,\n          classroom: response.data.classroom,\n          title: response.data.title,\n          description: response.data.description,\n          due_date: response.data.due_date\n        }));\n      })\n      getUserInfo(token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n    })\n    setTitle(assignmentTitles.title)\n    setDescription(assignmentTitles.description)\n  }, [])\n\n  const [title, setTitle] = useState(\"\")\n  const [description, setDescription] = useState(\"\")\n  const [dueYear, setDueYear] = useState(\"\")\n  const [dueMonth, setDueMonth] = useState(\"\")\n  const [dueDay, setDueDay] = useState(\"\")\n  const [dueHour, setDueHour] = useState(\"\")\n  const [dueMinute, setDueMinute] = useState(\"\")\n  const {getAccessTokenSilently} = useAuth0()\n\n  const history = useHistory()\n\n  function handleTitleChange(event) {\n    setTitle(event.target.value);\n  }\n\n  function handleDescriptionChange(event) {\n    setDescription(event.target.value)\n  }\n\n  function handleDueYearChange(event) {\n    setDueYear(event.target.value)\n  }\n\n  function handleDueMonthChange(event) {\n    setDueMonth(event.target.value)\n  }\n\n  function handleDueDayChange(event) {\n    setDueDay(event.target.value)\n  }\n\n  function handleDueHourChange(event) {\n    setDueHour(event.target.value)\n  }\n\n  function handleDueMinuteChange(event) {\n    setDueMinute(event.target.value)\n  }\n\n  function handleSubmit(event) {\n    getAccessTokenSilently().then((token) => {\n      updateAssignment(Cid, Aid, title, description, {\n        'year': parseInt(dueYear),\n        'month': parseInt(dueMonth),\n        'day': parseInt(dueDay),\n        'hour': parseInt(dueHour),\n        'minute': parseInt(dueMinute)\n      }, token).then((response) => {\n        history.push(`/instructor/classrooms/${Aid}/assignments/${Cid}`)\n      }, (error) => console.log(error.response))\n    })\n    event.preventDefault()\n  }\n\n  return (\n    <div>\n      <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n\n      <div className=\"Instructor-Assignment-Update\">\n        <div className=\"form-background\">\n          <div className=\"form-title\">\n            <p className=\"form-text\">Update Assignment</p>\n          </div>\n\n\n          <form onSubmit={handleSubmit}>\n            <label>\n              Title:\n              <input type=\"text\" value={title} onChange={handleTitleChange}/>\n            </label>\n            <div/>\n            <label>\n              Description:\n              <input type=\"text\" value={description} onChange={handleDescriptionChange}/>\n            </label>\n            <p>Due Date:</p>\n            <label>\n              Year:\n              <input type=\"text\" value={dueYear} onChange={handleDueYearChange}/>\n            </label>\n            <label>\n              Month:\n              <input type=\"text\" value={dueMonth} onChange={handleDueMonthChange}/>\n            </label>\n            <label>\n              Day:\n              <input type=\"text\" value={dueDay} onChange={handleDueDayChange}/>\n            </label>\n            <label>\n              Hour:\n             <input type=\"text\" value={dueHour} onChange={handleDueHourChange}/>\n            </label>\n            <label>\n              Minute:\n              <input type=\"text\" value={dueMinute} onChange={handleDueMinuteChange}/>\n            </label>\n            <div>\n              <input type=\"submit\" value=\"Submit\"/>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}","/home/noahwong/Desktop/avpd-main/frontend/src/student/StudentAssignment.js",["110","111","112","113","114","115"],"/home/noahwong/Desktop/avpd-main/frontend/src/instructor/InstructorNameList.js",["116","117"],"import './InstructorNameList.scss'\nimport React, {useEffect, useState} from \"react\";\nimport {NavBar} from \"../nav/NavBar\";\nimport {getUserInfo, viewClassroom, listStudents, removeStudentFromClass} from \"../requests\";\nimport {useHistory, useLocation, useParams} from \"react-router\";\nimport {useAuth0} from \"@auth0/auth0-react\";\n\nexport function InstructorNameList() {\n  const {getAccessTokenSilently} = useAuth0()\n  const history = useHistory()\n  const {id} = useParams()\n\n  const [currentStudent, setCurrentStudent] = useState()\n  const [studentList, setStudentList] = useState()\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n  const [classInfo, setClassinfo] = useState({\n    title:''\n  })\n\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      listStudents(id, token).then((response) => {\n        setStudentList(\n          response.data.map((assignment) => <li>\n            <button className=\"list-btn\" onClick={() => {\n              setCurrentStudent(assignment['id'])}\n            }>\n              {assignment['id']}\n            </button>\n          </li>)\n        )\n      })\n      getUserInfo(token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n      viewClassroom(id, token).then((response) => {\n        setClassinfo(prevState => ({\n          ...prevState,\n          title: response.data.title,\n        }));\n      })\n    })\n  }, [])\n\n  return (\n    <div>\n      <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n        <div className=\"Instructor-NameList\">\n          <div className=\"background\">\n            <div className=\"title\">\n              <p className=\"text\">Classroom Students List: {classInfo.title}</p>\n            </div>\n\n            <div className=\"scroll\">\n              <ul className=\"titles\">\n                {studentList}\n              </ul>\n            </div>\n\n            <div className=\"options\">\n\n              <button onClick={() => {\n                getAccessTokenSilently().then((token) => {\n                  removeStudentFromClass(id, currentStudent, token).then(() => history.go(0), (error) => console.log(error.response))\n                }, (error) => console.log(error))\n              }}>Delete Student</button>\n\n              <button onClick={() => {\n                history.push(`/instructor/classrooms/${id}`, {classroomID: id})\n              }}>Return</button>\n\n            </div>\n          </div>\n        </div>\n    </div>\n  )\n}","/home/noahwong/Desktop/avpd-main/frontend/src/instructor/InstructorSubmissions.js",["118","119","120"],"import './InstructorSubmissions.scss'\nimport React, {useEffect, useState} from \"react\";\nimport {NavBar} from \"../nav/NavBar\";\nimport {getUserInfo, viewAssignment, listSubmissions} from \"../requests\";\nimport {useHistory, useLocation, useParams} from \"react-router\";\nimport {useAuth0} from \"@auth0/auth0-react\";\n\nexport function InstructorSubmissionsList() {\n  const {getAccessTokenSilently} = useAuth0()\n  const history = useHistory()\n  const {id, classroomID} = useParams()\n  \n  const [currentStudent, setCurrentStudent] = useState()\n  const [submissionList, setSubmissionList] = useState()\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n  const [assignmentInfo, setAssignmentinfo] = useState({\n    title:''\n  })\n\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      getUserInfo(token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n      viewAssignment(classroomID, id, token).then((response) => {\n        setAssignmentinfo(prevState => ({\n          ...prevState,\n          title: response.data.title,\n        }));\n      })\n      listSubmissions(classroomID, id, token).then((response) => {\n        setSubmissionList(\n          response.data.map((assignment) => <li>\n            <button className=\"list-btn\" onClick={() => {\n              setCurrentStudent(assignment['id'])}\n            }>\n              {assignment['id']}\n            </button>\n          </li>)\n        )\n      })\n    })\n\n  }, [])\n\n  return (\n    <div>\n      <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n        <div className=\"Instructor-SubmissionsList\">\n          <div className=\"background\">\n            <div className=\"title\">\n              <p className=\"text\">List of assignment submissions: {assignmentInfo.title} ; current Student: {currentStudent}</p>\n            </div>\n\n            <div className=\"scroll\">\n              <ul className=\"titles\">\n                {submissionList}\n              </ul>\n            </div>\n\n            <div className=\"options\">\n\n            </div>\n          </div>\n        </div>\n    </div>\n  )\n}","/home/noahwong/Desktop/avpd-main/frontend/src/student/PostSubmitList.js",["121","122","123"],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":7,"column":9,"nodeType":"130","messageId":"131","endLine":7,"endColumn":20},{"ruleId":"132","severity":1,"message":"133","line":47,"column":6,"nodeType":"134","endLine":47,"endColumn":8,"suggestions":"135"},{"ruleId":"132","severity":1,"message":"136","line":108,"column":6,"nodeType":"134","endLine":108,"endColumn":8,"suggestions":"137"},{"ruleId":"132","severity":1,"message":"133","line":45,"column":6,"nodeType":"134","endLine":45,"endColumn":19,"suggestions":"138"},{"ruleId":"132","severity":1,"message":"139","line":119,"column":6,"nodeType":"134","endLine":119,"endColumn":8,"suggestions":"140"},{"ruleId":"128","severity":1,"message":"141","line":1,"column":9,"nodeType":"130","messageId":"131","endLine":1,"endColumn":17},{"ruleId":"128","severity":1,"message":"142","line":4,"column":69,"nodeType":"130","messageId":"131","endLine":4,"endColumn":90},{"ruleId":"128","severity":1,"message":"143","line":13,"column":10,"nodeType":"130","messageId":"131","endLine":13,"endColumn":20},{"ruleId":"132","severity":1,"message":"144","line":58,"column":6,"nodeType":"134","endLine":58,"endColumn":8,"suggestions":"145"},{"ruleId":"132","severity":1,"message":"146","line":49,"column":6,"nodeType":"134","endLine":49,"endColumn":8,"suggestions":"147"},{"ruleId":"132","severity":1,"message":"136","line":131,"column":6,"nodeType":"134","endLine":131,"endColumn":8,"suggestions":"148"},{"ruleId":"132","severity":1,"message":"136","line":230,"column":6,"nodeType":"134","endLine":230,"endColumn":8,"suggestions":"149"},{"ruleId":"132","severity":1,"message":"144","line":45,"column":6,"nodeType":"134","endLine":45,"endColumn":8,"suggestions":"150"},{"ruleId":"132","severity":1,"message":"151","line":128,"column":6,"nodeType":"134","endLine":128,"endColumn":8,"suggestions":"152"},{"ruleId":"128","severity":1,"message":"153","line":14,"column":7,"nodeType":"130","messageId":"131","endLine":14,"endColumn":11},{"ruleId":"128","severity":1,"message":"154","line":17,"column":7,"nodeType":"130","messageId":"131","endLine":17,"endColumn":12},{"ruleId":"128","severity":1,"message":"155","line":19,"column":10,"nodeType":"130","messageId":"131","endLine":19,"endColumn":16},{"ruleId":"132","severity":1,"message":"144","line":54,"column":6,"nodeType":"134","endLine":54,"endColumn":8,"suggestions":"156"},{"ruleId":"157","severity":1,"message":"158","line":61,"column":38,"nodeType":"159","messageId":"160","endLine":61,"endColumn":40},{"ruleId":"132","severity":1,"message":"161","line":69,"column":6,"nodeType":"134","endLine":69,"endColumn":8,"suggestions":"162"},{"ruleId":"128","severity":1,"message":"163","line":5,"column":21,"nodeType":"130","messageId":"131","endLine":5,"endColumn":32},{"ruleId":"132","severity":1,"message":"139","line":50,"column":6,"nodeType":"134","endLine":50,"endColumn":8,"suggestions":"164"},{"ruleId":"128","severity":1,"message":"163","line":5,"column":21,"nodeType":"130","messageId":"131","endLine":5,"endColumn":32},{"ruleId":"128","severity":1,"message":"165","line":10,"column":9,"nodeType":"130","messageId":"131","endLine":10,"endColumn":16},{"ruleId":"132","severity":1,"message":"144","line":51,"column":6,"nodeType":"134","endLine":51,"endColumn":8,"suggestions":"166"},{"ruleId":"128","severity":1,"message":"167","line":4,"column":69,"nodeType":"130","messageId":"131","endLine":4,"endColumn":76},{"ruleId":"128","severity":1,"message":"165","line":10,"column":9,"nodeType":"130","messageId":"131","endLine":10,"endColumn":16},{"ruleId":"132","severity":1,"message":"144","line":61,"column":6,"nodeType":"134","endLine":61,"endColumn":8,"suggestions":"168"},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"no-unused-vars","'MessageHome' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getAccessTokenSilently' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["171"],"React Hook useEffect has a missing dependency: 'getAccessTokenSilently'. Either include it or remove the dependency array.",["172"],["173"],"React Hook useEffect has missing dependencies: 'getAccessTokenSilently' and 'id'. Either include them or remove the dependency array.",["174"],"'useAuth0' is defined but never used.","'viewSubmissionStudent' is defined but never used.","'submitList' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'classroomID', 'getAccessTokenSilently', and 'id'. Either include them or remove the dependency array.",["175"],"React Hook useEffect has missing dependencies: 'getAccessTokenSilently', 'history', and 'id'. Either include them or remove the dependency array.",["176"],["177"],["178"],["179"],"React Hook useEffect has missing dependencies: 'Aid', 'Cid', 'assignmentTitles.description', 'assignmentTitles.title', and 'getAccessTokenSilently'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setTitle' needs the current value of 'assignmentTitles.title'.",["180"],"'date' is assigned a value but never used.","'hours' is assigned a value but never used.","'onTime' is assigned a value but never used.",["181"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'assignmentTitles.due_date', 'month', and 'year'. Either include them or remove the dependency array.",["182"],"'useLocation' is defined but never used.",["183"],"'history' is assigned a value but never used.",["184"],"'getFile' is defined but never used.",["185"],"no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"desc":"188","fix":"198"},{"desc":"188","fix":"199"},{"desc":"194","fix":"200"},{"desc":"201","fix":"202"},{"desc":"194","fix":"203"},{"desc":"204","fix":"205"},{"desc":"192","fix":"206"},{"desc":"194","fix":"207"},{"desc":"194","fix":"208"},"Update the dependencies array to be: [getAccessTokenSilently, history]",{"range":"209","text":"210"},"Update the dependencies array to be: [getAccessTokenSilently]",{"range":"211","text":"212"},"Update the dependencies array to be: [classNumber, getAccessTokenSilently, history]",{"range":"213","text":"214"},"Update the dependencies array to be: [getAccessTokenSilently, id]",{"range":"215","text":"216"},"Update the dependencies array to be: [classroomID, getAccessTokenSilently, id]",{"range":"217","text":"218"},"Update the dependencies array to be: [getAccessTokenSilently, history, id]",{"range":"219","text":"220"},{"range":"221","text":"212"},{"range":"222","text":"212"},{"range":"223","text":"218"},"Update the dependencies array to be: [Aid, Cid, assignmentTitles.description, assignmentTitles.title, getAccessTokenSilently]",{"range":"224","text":"225"},{"range":"226","text":"218"},"Update the dependencies array to be: [assignmentTitles.due_date, month, year]",{"range":"227","text":"228"},{"range":"229","text":"216"},{"range":"230","text":"218"},{"range":"231","text":"218"},[1290,1292],"[getAccessTokenSilently, history]",[2833,2835],"[getAccessTokenSilently]",[1296,1309],"[classNumber, getAccessTokenSilently, history]",[3304,3306],"[getAccessTokenSilently, id]",[1906,1908],"[classroomID, getAccessTokenSilently, id]",[1593,1595],"[getAccessTokenSilently, history, id]",[3914,3916],[6478,6480],[1400,1402],[3994,3996],"[Aid, Cid, assignmentTitles.description, assignmentTitles.title, getAccessTokenSilently]",[1798,1800],[2228,2230],"[assignmentTitles.due_date, month, year]",[1554,1556],[1614,1616],[1949,1951]]