[{"/home/noahwong/Desktop/avpd-main/frontend/src/index.js":"1","/home/noahwong/Desktop/avpd-main/frontend/src/reportWebVitals.js":"2","/home/noahwong/Desktop/avpd-main/frontend/src/App.js":"3","/home/noahwong/Desktop/avpd-main/frontend/src/auth/auth0-provider-with-history.js":"4","/home/noahwong/Desktop/avpd-main/frontend/src/Home.js":"5","/home/noahwong/Desktop/avpd-main/frontend/src/About.js":"6","/home/noahwong/Desktop/avpd-main/frontend/src/instructor/InstructorHome.js":"7","/home/noahwong/Desktop/avpd-main/frontend/src/student/StudentHome.js":"8","/home/noahwong/Desktop/avpd-main/frontend/src/requests.js":"9","/home/noahwong/Desktop/avpd-main/frontend/src/nav/NavBar.js":"10","/home/noahwong/Desktop/avpd-main/frontend/src/utils.js":"11","/home/noahwong/Desktop/avpd-main/frontend/src/user/login-button.js":"12","/home/noahwong/Desktop/avpd-main/frontend/src/user/logout-button.js":"13","/home/noahwong/Desktop/avpd-main/frontend/src/student/PostSubmit.js":"14","/home/noahwong/Desktop/avpd-main/frontend/src/Message/MessageHome.js":"15","/home/noahwong/Desktop/avpd-main/frontend/src/instructor/InstructorClassroom.js":"16","/home/noahwong/Desktop/avpd-main/frontend/src/instructor/InstructorAssignment.js":"17","/home/noahwong/Desktop/avpd-main/frontend/src/student/StudentAssignment.js":"18","/home/noahwong/Desktop/avpd-main/frontend/src/instructor/InstructorNameList.js":"19"},{"size":730,"mtime":1613439891000,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1613439891000,"results":"22","hashOfConfig":"21"},{"size":1898,"mtime":1614574977797,"results":"23","hashOfConfig":"21"},{"size":833,"mtime":1613439891000,"results":"24","hashOfConfig":"21"},{"size":1286,"mtime":1614569785273,"results":"25","hashOfConfig":"21"},{"size":117,"mtime":1613439891000,"results":"26","hashOfConfig":"21"},{"size":3396,"mtime":1614561927270,"results":"27","hashOfConfig":"21"},{"size":3936,"mtime":1614651798241,"results":"28","hashOfConfig":"21"},{"size":5544,"mtime":1614576735478,"results":"29","hashOfConfig":"21"},{"size":1174,"mtime":1614392506666,"results":"30","hashOfConfig":"21"},{"size":284,"mtime":1613439891000,"results":"31","hashOfConfig":"21"},{"size":327,"mtime":1613439891000,"results":"32","hashOfConfig":"21"},{"size":375,"mtime":1613439891000,"results":"33","hashOfConfig":"21"},{"size":1839,"mtime":1614652090428,"results":"34","hashOfConfig":"21"},{"size":0,"mtime":1614392743297,"results":"35","hashOfConfig":"21"},{"size":6364,"mtime":1614570722577,"results":"36","hashOfConfig":"21"},{"size":6903,"mtime":1614569405055,"results":"37","hashOfConfig":"21"},{"size":2897,"mtime":1614825181677,"results":"38","hashOfConfig":"21"},{"size":2612,"mtime":1614573144193,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"18danex",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"42"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"42"},"/home/noahwong/Desktop/avpd-main/frontend/src/index.js",[],["89","90"],"/home/noahwong/Desktop/avpd-main/frontend/src/reportWebVitals.js",[],"/home/noahwong/Desktop/avpd-main/frontend/src/App.js",["91"],"import './App.scss';\nimport {Route,} from 'react-router-dom';\nimport {Switch} from 'react-router';\nimport React from \"react\";\nimport {Home} from \"./Home\";\nimport About from \"./About\";\nimport {MessageHome} from \"./Message/MessageHome\"\n//instructor imports\nimport {CreateClassroomForm} from \"./instructor/InstructorHome\";\nimport {InstructorClassroom, CreateAssignmentForm} from \"./instructor/InstructorClassroom\";\nimport {InstructorNameList} from \"./instructor/InstructorNameList\";\nimport {InstructorAssignment, UpdateAssignmentForm} from \"./instructor/InstructorAssignment\";\n//student Inports\nimport {JoinClassroomForm} from \"./student/StudentHome\"\nimport {StudentAssignment} from \"./student/StudentAssignment.js\"\nimport {PostSubmit} from \"./student/PostSubmit.js\"\n\nfunction App() {\n  return (\n    <Main/>\n  );\n}\n\nfunction Main() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Home}/>\n      <Route exact path=\"/about\" component={About}/>\n      {/* forms instructor*/}\n      <Route exact path=\"/create-classroom\" component={CreateClassroomForm}/>\n      <Route exact path=\"/create-assignment\" component={CreateAssignmentForm}/>\n      <Route exact path=\"/update-assignment\" component={UpdateAssignmentForm}/>\n      <Route exact path=\"/join-classroom\" component={JoinClassroomForm}/>\n      {/*intructor menu*/}\n      <Route exact path=\"/instructor/classrooms/:id\" component={InstructorClassroom}/>\n      <Route exact path=\"/instructor/classrooms/:classroomID/assignments/:id\" component={InstructorAssignment}/>\n      <Route exact path=\"/instructor/classrooms/:id/students\" component={InstructorNameList}/>\n      {/*Student menu*/}\n      <Route exact path=\"/student/classrooms/:classroomID/assignments/:id\" component={StudentAssignment}/>\n      <Route exact path=\"/student/classrooms/:classroomID/assignments/:id/submit\" component={PostSubmit}/>\n    </Switch>\n  )\n}\n\nexport default App;","/home/noahwong/Desktop/avpd-main/frontend/src/auth/auth0-provider-with-history.js",[],"/home/noahwong/Desktop/avpd-main/frontend/src/Home.js",[],"/home/noahwong/Desktop/avpd-main/frontend/src/About.js",[],"/home/noahwong/Desktop/avpd-main/frontend/src/instructor/InstructorHome.js",["92","93"],"import './InstructorHome.scss'\nimport React, {useEffect, useState} from \"react\";\nimport {useAuth0} from \"@auth0/auth0-react\";\nimport {useHistory} from \"react-router-dom\";\nimport {NavBar} from \"../nav/NavBar\";\nimport {getUserData, getClassroomList, createClassroom} from \"../requests\";\n\nexport function InstructorHome(props) {\n  return (\n    <div>\n      <Classrooms/>\n    </div>\n  )\n}\n\nfunction Classrooms() {\n  const {getAccessTokenSilently} = useAuth0();\n  const history = useHistory()\n\n  const [classroomTitles, setClassroomTitles] = useState();\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      getClassroomList(token).then((response) => {\n        setClassroomTitles(\n          response.data.map((data) => <li>\n            <button className=\"list-btn\" onClick={() => {\n              history.push(`/instructor/classrooms/${data['id']}`)\n            }}>\n              {data['title']}\n            </button>\n          </li>)\n        )\n      })\n      getUserData(token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n    })\n  }, [])\n\n  return (\n    <div>\n      <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n\n      <div className=\"Instructor-Classrooms\">\n        <div className=\"background\">\n          <div className=\"title\">\n            <p className=\"text\">Instructor Home</p>\n          </div>\n          <div className=\"scroll\">\n            <ul className=\"list-titles\">\n              {classroomTitles}\n            </ul>\n          </div>\n          <div className=\"options\">\n            <button onClick={() => {  history.push('/create-classroom')}}>\n              Create Classroom\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport function CreateClassroomForm() {\n  const {getAccessTokenSilently} = useAuth0();\n  const history = useHistory()\n\n  const [title, setTitle] = useState(\"\");\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n\n  function handleChange(event) {\n    setTitle(event.target.value);\n  }\n\n  function handleSubmit(event) {\n    getAccessTokenSilently().then((token) => {\n      createClassroom(title, token).then((response) => {\n        history.push('/')\n      }, (error) => console.log(error.response))\n    })\n\n    event.preventDefault()\n  }\n\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      getUserData(token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n    })\n  }, [])\n\n  return (\n  <div>\n    <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n\n    <div className=\"Instructor-Classroom-Create\">\n      <div className=\"form-background\">\n        <div className=\"form-title\">\n          <p className=\"form-text\">Create Assignment</p>\n        </div>\n\n        <form onSubmit={handleSubmit}>\n          <label>\n            Title: <input type=\"text\" value={title} onChange={handleChange}/>\n          </label>\n          <input type=\"submit\" value=\"Submit\"/>\n        </form>\n      </div>\n    </div>\n  </div>\n  )\n}","/home/noahwong/Desktop/avpd-main/frontend/src/student/StudentHome.js",["94","95"],"import './StudentHome.scss'\nimport {NavBar} from \"../nav/NavBar\";\n\nimport React, {useEffect, useState} from \"react\";\n\nimport {useAuth0} from \"@auth0/auth0-react\";\nimport {useHistory} from \"react-router-dom\";\nimport {getUserData, getAssignments, joinClassroom} from \"../requests\";\n\nexport function StudentHome(props) {\n  return (\n    <div>\n      <NavBar firstName={props.userData['first_name']} lastName={props.userData['last_name']}/>\n      <Essay />\n    </div>\n  )\n}\n\n//load all essays\nfunction Essay() {\n  const {getAccessTokenSilently} = useAuth0();\n  const history = useHistory()\n  const [essaysTitles, setEssaysTitles] = useState();\n  const [classNumber, setClassNumber] = useState(1);\n\n  function handleSetClassNumber(e) {\n    setClassNumber(e.target.value);\n  }\n\n  //used for scroll down menu for classes\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      getAssignments(token, classNumber).then((response) => {\n        setEssaysTitles(\n          response.data.map((data) => <li>\n            <button className=\"assignment-btn\" onClick={() => {\n              history.push(`/student/classrooms/${classNumber}/assignments/${data['id']}`)\n            }}>\n              {data['title']}\n            </button>\n          </li>)\n        )\n      })\n    })\n  }, [classNumber])\n\n  return (\n    <div className = \"Assignments\">\n      <div className = \"background\">\n        <div className = \"Text\">\n          {/*no command for student to get classes to temporary hard code */}\n          <label>Class number input: </label>\n          <select defaultValue={classNumber} onChange={handleSetClassNumber}>\n            <option value = \"1\" > class 1 </option>\n            <option value = \"2\"> class 2 </option>\n            <option value = \"3\"> class 3 </option>\n            <option value = \"10\"> class 10 </option>\n          </select>\n        </div>\n\n        <div className=\"assignment-title\">\n          <div className=\"assignment-background\">\n            <p className=\"assignment-text\">list of assignments</p>\n          </div>\n          <div className=\"assignment-scroll\">\n            <ul className=\"assignment-name\">\n              {essaysTitles}\n            </ul>\n          </div>\n        </div>\n\n        <div>\n        <button onClick={() => {  history.push('/join-classroom')}}>\n          Join Classroom\n        </button>\n\n        </div>\n      </div>\n    </div>\n  )\n}\n\n//function to create assignment\nexport function JoinClassroomForm(props) {\n  const {getAccessTokenSilently} = useAuth0()\n\n  const [id, setID] = useState()\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n\n  const history = useHistory()\n\n  function handleIDChange(event) {\n    setID(event.target.value);\n  }\n\n  function handleSubmit(event) {\n    getAccessTokenSilently().then((token) => {\n      joinClassroom(id, token).then((response) => {\n        history.push('/')\n      }, (error) => console.log(error.response))\n    })\n\n    event.preventDefault()\n  }\n  \n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      getUserData(id , token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n    })\n  }, [])\n\n  return (\n    <div>\n      <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n\n      <div className=\"Instructor-Assignment-Create\">\n        <div className=\"form-background\">\n          <div className=\"form-title\">\n            <p className=\"form-text\">Join Classroom</p>\n          </div>\n\n          <form onSubmit={handleSubmit}>\n            <label>\n              classNumber: \n              <input type=\"number\" value={id} onChange={handleIDChange}/>\n            </label>\n            <div>\n              <input type=\"submit\" value=\"Submit\"/>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}","/home/noahwong/Desktop/avpd-main/frontend/src/requests.js",[],"/home/noahwong/Desktop/avpd-main/frontend/src/nav/NavBar.js",[],"/home/noahwong/Desktop/avpd-main/frontend/src/utils.js",["96"],"import {useAuth0} from \"@auth0/auth0-react\";\n\nexport function serverUrl() {\n  return process.env.REACT_APP_SERVER_URL;\n}\n\nexport async function authenticateRequest(requestConfig, token) {\n  requestConfig.headers = {\n    'Authorization': `Bearer ${token}`\n  }\n\n  return requestConfig\n}","/home/noahwong/Desktop/avpd-main/frontend/src/user/login-button.js",[],["97","98"],"/home/noahwong/Desktop/avpd-main/frontend/src/user/logout-button.js",[],"/home/noahwong/Desktop/avpd-main/frontend/src/student/PostSubmit.js",["99","100"],"import './PostSubmit.scss'\nimport React, {useEffect, useState} from \"react\";\nimport {NavBar} from \"../nav/NavBar\";\nimport {getUserData, viewAssignment} from \"../requests\";\nimport {useHistory, useParams} from \"react-router\";\nimport {useAuth0} from \"@auth0/auth0-react\";\n\nexport function PostSubmit() {\n  const {getAccessTokenSilently} = useAuth0()\n  const history = useHistory()\n  const {classroomID, id} = useParams()\n\n  const [assignmentTitles, setAssignmentTitles] = useState({\n    id: '',\n    classroom: '',\n    title: '',\n    description: '',\n    due_date: ''\n  })\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n\n  //run to get assignment and user data on page load\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      viewAssignment( classroomID,id, token).then((response) => {\n        setAssignmentTitles(prevState => ({\n          ...prevState,\n          id: response.data.id,\n          classroom: response.data.classroom,\n          title: response.data.title,\n          description: response.data.description,\n          due_date: response.data.due_date\n        }));\n      })\n      getUserData(token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n    })\n  }, [])\n\n  return(\n    <div>\n      <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n      <div className = \"StudentPostSubmit\">\n        <div className = \"background\">\n          <p className = \"text\"> title: {assignmentTitles.title}</p>\n          <p className = \"text\"> description: {assignmentTitles.description}</p>\n          <p className = \"text\"> due date: {assignmentTitles.due_date}</p>\n        </div>\n      </div>\n    </div>\n  )\n}","/home/noahwong/Desktop/avpd-main/frontend/src/Message/MessageHome.js",[],"/home/noahwong/Desktop/avpd-main/frontend/src/instructor/InstructorClassroom.js",["101","102"],"import './InstructorClassrooms.scss'\nimport React, {useEffect, useState} from \"react\";\nimport {NavBar} from \"../nav/NavBar\";\nimport {getUserData, getClassroom, getInstructorAssignments, createAssignment, deleteClassroom} from \"../requests\";\nimport {useHistory, useLocation, useParams} from \"react-router\";\nimport {useAuth0} from \"@auth0/auth0-react\";\n\nexport function InstructorClassroom() {\n  const {getAccessTokenSilently} = useAuth0()\n  const history = useHistory()\n  const {id} = useParams()\n\n  const [assignmentTitles, setAssignmentTitles] = useState()\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n  const [classInfo, setClassinfo] = useState({\n    title:''\n  })\n\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      getInstructorAssignments(id, token).then((response) => {\n        setAssignmentTitles(\n          response.data.map((assignment) => <li>\n            <button className=\"list-btn\" onClick={() => {\n              history.push(`/instructor/classrooms/${id}/assignments/${assignment['id']}`)\n            }}>\n              {assignment['title']}\n            </button>\n          </li>)\n        )\n      })\n      getUserData(token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n      getClassroom(id, token).then((response) => {\n        setClassinfo(prevState => ({\n          ...prevState,\n          title: response.data.title,\n        }));\n      })\n    })\n  }, [])\n\n  return (\n    <div>\n      <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n\n        <div className=\"Instructor-Assignment\">\n          <div className=\"background\">\n            <div className=\"title\">\n              <p className=\"text\">Classroom: {classInfo.title}</p>\n            </div>\n\n            <div className=\"scroll\">\n              <ul className=\"titles\">\n                {assignmentTitles}\n              </ul>\n            </div>\n\n            <div className=\"options\">\n\n              <button onClick={() => {\n                history.push(`/instructor/classrooms/${id}/students`, {classroomID: id})\n              }}>List Students</button>\n\n              <button onClick={() => {\n                getAccessTokenSilently().then((token) => {\n                deleteClassroom(id, token).then(() => history.push('/'), (error) => console.log(error.response))\n                }, (error) => console.log(error))\n              }}>Delete</button>\n\n              <button onClick={() => {\n                history.push(`/create-assignment`, {classroomID: id})\n              }}>Create Assignment</button>\n\n            </div>\n          </div>\n        </div>\n    </div>\n  )\n}\n\n//function to create assignment\nexport function CreateAssignmentForm(props) {\n  const location = useLocation()\n\n  const id = location.state.classroomID\n\n  const [title, setTitle] = useState(\"\")\n  const [description, setDescription] = useState(\"\")\n  const [dueYear, setDueYear] = useState(\"\")\n  const [dueMonth, setDueMonth] = useState(\"\")\n  const [dueDay, setDueDay] = useState(\"\")\n  const [dueHour, setDueHour] = useState(\"\")\n  const [dueMinute, setDueMinute] = useState(\"\")\n  const {getAccessTokenSilently} = useAuth0()\n\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n\n  const history = useHistory()\n\n  function handleTitleChange(event) {\n    setTitle(event.target.value);\n  }\n\n  function handleDescriptionChange(event) {\n    setDescription(event.target.value)\n  }\n\n  function handleDueYearChange(event) {\n    setDueYear(event.target.value)\n  }\n\n  function handleDueMonthChange(event) {\n    setDueMonth(event.target.value)\n  }\n\n  function handleDueDayChange(event) {\n    setDueDay(event.target.value)\n  }\n\n  function handleDueHourChange(event) {\n    setDueHour(event.target.value)\n  }\n\n  function handleDueMinuteChange(event) {\n    setDueMinute(event.target.value)\n  }\n\n  function handleSubmit(event) {\n    getAccessTokenSilently().then((token) => {\n      createAssignment(id, title, description, {\n        'year': parseInt(dueYear),\n        'month': parseInt(dueMonth),\n        'day': parseInt(dueDay),\n        'hour': parseInt(dueHour),\n        'minute': parseInt(dueMinute)\n      }, token).then((response) => {\n        history.push(`/instructor/classrooms/${id}`)\n      }, (error) => console.log(error.response))\n    })\n\n    event.preventDefault()\n  }\n\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      getUserData(token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n    })\n  }, [])\n\n  return (\n    <div>\n      <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n\n      <div className=\"Instructor-Assignment-Create\">\n        <div className=\"form-background\">\n          <div className=\"form-title\">\n            <p className=\"form-text\">Create Assignment</p>\n          </div>\n\n          <form onSubmit={handleSubmit}>\n            <label>\n              Title:\n              <input type=\"text\" value={title} onChange={handleTitleChange}/>\n            </label>\n            <div/>\n            <label>\n              Description:\n              <input type=\"text\" value={description} onChange={handleDescriptionChange}/>\n            </label>\n            <p>Due Date:</p>\n            <label>\n              Year:\n              <input type=\"text\" value={dueYear} onChange={handleDueYearChange}/>\n            </label>\n            <label>\n              Month:\n              <input type=\"text\" value={dueMonth} onChange={handleDueMonthChange}/>\n            </label>\n            <label>\n              Day:\n              <input type=\"text\" value={dueDay} onChange={handleDueDayChange}/>\n            </label>\n            <label>\n              Hour:\n             <input type=\"text\" value={dueHour} onChange={handleDueHourChange}/>\n            </label>\n            <label>\n              Minute:\n              <input type=\"text\" value={dueMinute} onChange={handleDueMinuteChange}/>\n            </label>\n            <div>\n              <input type=\"submit\" value=\"Submit\"/>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}","/home/noahwong/Desktop/avpd-main/frontend/src/instructor/InstructorAssignment.js",["103","104"],"import './InstructorAssignment.scss'\nimport React, {useEffect, useState} from \"react\";\nimport {NavBar} from \"../nav/NavBar\";\nimport {getUserData, deleteAssignment, updateAssignment, viewInstructorAssignment} from \"../requests\";\nimport {useHistory, useLocation, useParams} from \"react-router\";\nimport {useAuth0} from \"@auth0/auth0-react\";\n\nexport function InstructorAssignment() {\n  const {getAccessTokenSilently} = useAuth0()\n  const history = useHistory()\n  const {classroomID, id} = useParams()\n\n  const [assignmentTitles, setAssignmentTitles] = useState({\n    id: '',\n    classroom: '',\n    title: '',\n    description: '',\n    due_date: ''\n  })\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      viewInstructorAssignment( classroomID,id, token).then((response) => {\n        setAssignmentTitles(prevState => ({\n          ...prevState,\n          id: response.data.id,\n          classroom: response.data.classroom,\n          title: response.data.title,\n          description: response.data.description,\n          due_date: response.data.due_date\n        }));\n      })\n      getUserData(token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n    })\n  }, [])\n\n  return (\n    <div>\n      <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n\n      <div className = \"Instructor-Assignment-Info\">\n        <div className=\"background\">\n          <div className=\"title\">\n            <p className=\"text\">Assignment Info</p>\n          </div>\n\n          <div className=\"body-text\">\n            <p className = \"text\"> title: {assignmentTitles.title}</p>\n            <p className = \"text\"> due date: {assignmentTitles.due_date}</p>\n            <p className = \"text\"> description: {assignmentTitles.description}</p>\n          </div>\n\n          <div className=\"options-test\">\n            <button onClick={() => {\n              getAccessTokenSilently().then((token) => {\n              deleteAssignment(classroomID, id, token).then(() =>\n              history.push('/instructor/classroom/1'), (error) => console.log(error.response))\n              }, (error) => console.log(error))\n            }}>Delete</button>\n\n            <button onClick={() => {\n              history.push('/update-assignment', \n              {classroomID: assignmentTitles.id,\n              assignmentID: assignmentTitles.classroom})\n            }}>Update Assignment</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport function UpdateAssignmentForm(props) {\n  const location = useLocation()\n\n  const Cid = location.state.classroomID\n  const Aid = location.state.assignmentID\n\n  const [assignmentTitles, setAssignmentTitles] = useState({\n    id: '',\n    classroom: '',\n    title: '',\n    description: '',\n    due_date: ''\n  })\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      viewInstructorAssignment( Cid, Aid, token).then((response) => {\n        setAssignmentTitles(prevState => ({\n          ...prevState,\n          id: response.data.id,\n          classroom: response.data.classroom,\n          title: response.data.title,\n          description: response.data.description,\n          due_date: response.data.due_date\n        }));\n      })\n      getUserData(token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n    })\n    setTitle(assignmentTitles.title)\n    setDescription(assignmentTitles.description)\n  }, [])\n\n  const [title, setTitle] = useState(\"\")\n  const [description, setDescription] = useState(\"\")\n  const [dueYear, setDueYear] = useState(\"\")\n  const [dueMonth, setDueMonth] = useState(\"\")\n  const [dueDay, setDueDay] = useState(\"\")\n  const [dueHour, setDueHour] = useState(\"\")\n  const [dueMinute, setDueMinute] = useState(\"\")\n  const {getAccessTokenSilently} = useAuth0()\n\n  const history = useHistory()\n\n  function handleTitleChange(event) {\n    setTitle(event.target.value);\n  }\n\n  function handleDescriptionChange(event) {\n    setDescription(event.target.value)\n  }\n\n  function handleDueYearChange(event) {\n    setDueYear(event.target.value)\n  }\n\n  function handleDueMonthChange(event) {\n    setDueMonth(event.target.value)\n  }\n\n  function handleDueDayChange(event) {\n    setDueDay(event.target.value)\n  }\n\n  function handleDueHourChange(event) {\n    setDueHour(event.target.value)\n  }\n\n  function handleDueMinuteChange(event) {\n    setDueMinute(event.target.value)\n  }\n\n  function handleSubmit(event) {\n    getAccessTokenSilently().then((token) => {\n      updateAssignment(Cid, Aid, title, description, {\n        'year': parseInt(dueYear),\n        'month': parseInt(dueMonth),\n        'day': parseInt(dueDay),\n        'hour': parseInt(dueHour),\n        'minute': parseInt(dueMinute)\n      }, token).then((response) => {\n        history.push(`/instructor/classrooms/${Aid}/assignments/${Cid}`)\n      }, (error) => console.log(error.response))\n    })\n    event.preventDefault()\n  }\n\n  return (\n    <div>\n      <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n\n      <div className=\"Instructor-Assignment-Update\">\n        <div className=\"form-background\">\n          <div className=\"form-title\">\n            <p className=\"form-text\">Update Assignment</p>\n          </div>\n\n\n          <form onSubmit={handleSubmit}>\n            <label>\n              Title:\n              <input type=\"text\" value={title} onChange={handleTitleChange}/>\n            </label>\n            <div/>\n            <label>\n              Description:\n              <input type=\"text\" value={description} onChange={handleDescriptionChange}/>\n            </label>\n            <p>Due Date:</p>\n            <label>\n              Year:\n              <input type=\"text\" value={dueYear} onChange={handleDueYearChange}/>\n            </label>\n            <label>\n              Month:\n              <input type=\"text\" value={dueMonth} onChange={handleDueMonthChange}/>\n            </label>\n            <label>\n              Day:\n              <input type=\"text\" value={dueDay} onChange={handleDueDayChange}/>\n            </label>\n            <label>\n              Hour:\n             <input type=\"text\" value={dueHour} onChange={handleDueHourChange}/>\n            </label>\n            <label>\n              Minute:\n              <input type=\"text\" value={dueMinute} onChange={handleDueMinuteChange}/>\n            </label>\n            <div>\n              <input type=\"submit\" value=\"Submit\"/>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}","/home/noahwong/Desktop/avpd-main/frontend/src/student/StudentAssignment.js",["105"],"import './StudentAssignment.scss'\nimport React, {useEffect, useState} from \"react\";\nimport {NavBar} from \"../nav/NavBar\";\nimport {getUserData, viewAssignment, SubmitEssay} from \"../requests\";\nimport {useHistory, useParams} from \"react-router\";\nimport {useAuth0} from \"@auth0/auth0-react\";\n\n//open assignment\nexport function StudentAssignment() {\n  const {getAccessTokenSilently} = useAuth0()\n  const history = useHistory()\n  const {classroomID, id} = useParams()\n\n  const [assignmentTitles, setAssignmentTitles] = useState({\n    id: '',\n    classroom: '',\n    title: '',\n    discription: '',\n    due_date: ''\n  })\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n  const [file, setFile] = React.useState(\"\");\n\n  //run to get assignment and user data on page load\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      viewAssignment( classroomID,id, token).then((response) => {\n        setAssignmentTitles(prevState => ({\n          ...prevState,\n          id: response.data.id,\n          classroom: response.data.classroom,\n          title: response.data.title,\n          description: response.data.description,\n          due_date: response.data.due_date\n        }));\n      })\n      getUserData(token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n    })\n  }, [])\n\n  //code to upload file automaticly uploads after file put in\n  function handleUpload(event) {\n    setFile(event.target.files[0]);\n    event.preventDefault()\n  }\n\n  const ImageThumb = ({ image }) => {\n    return <img src={URL.createObjectURL(image)} alt={image.name}  className = \"essayImage\"/>;\n  };\n\n  function submitButton(event){\n    getAccessTokenSilently().then((token) => {\n      SubmitEssay(classroomID,id, file, token).then((response) => {\n        history.push('/')\n      }, (error) => console.log(error.response))\n    })\n\n    history.push(`/student/classrooms/${classroomID}/assignments/${id}/submit`)\n\n    event.preventDefault()\n  }\n\n  return (\n      <div>\n        <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n        <div className = \"StudentAssignments\">\n          <div className = \"background\">\n            <p className = \"text\"> title: {assignmentTitles.title}</p>\n            <p className = \"text\"> description: {assignmentTitles.description}</p>\n            <p className = \"text\"> due date: {assignmentTitles.due_date}</p>\n\n            <input type=\"file\" onChange={handleUpload} />\n            <p>Filename: {file.name}</p>\n            <p>File type: {file.type}</p>\n            {file && <ImageThumb image={file} />}\n\n            <div/>\n            <button onClick={submitButton}>\n              submit\n            </button>\n\n          </div>\n        </div>\n      </div>\n  )\n}","/home/noahwong/Desktop/avpd-main/frontend/src/instructor/InstructorNameList.js",["106","107"],"import './InstructorNameList.scss'\nimport React, {useEffect, useState} from \"react\";\nimport {NavBar} from \"../nav/NavBar\";\nimport {getUserData, getClassroom, getListStudents, deleteStudent} from \"../requests\";\nimport {useHistory, useLocation, useParams} from \"react-router\";\nimport {useAuth0} from \"@auth0/auth0-react\";\n\nexport function InstructorNameList() {\n  const {getAccessTokenSilently} = useAuth0()\n  const history = useHistory()\n  const {id} = useParams()\n\n  const [currentStudent, setCurrentStudent] = useState()\n  const [assignmentTitles, setAssignmentTitles] = useState()\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n  const [classInfo, setClassinfo] = useState({\n    title:''\n  })\n\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      getListStudents(id, token).then((response) => {\n        setAssignmentTitles(\n          response.data.map((assignment) => <li>\n            <button className=\"list-btn\" onClick={() => {\n              setCurrentStudent(assignment['id'])}\n            }>\n              {assignment['id']}\n            </button>\n          </li>)\n        )\n      })\n      getUserData(token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n      getClassroom(id, token).then((response) => {\n        setClassinfo(prevState => ({\n          ...prevState,\n          title: response.data.title,\n        }));\n      })\n    })\n  }, [])\n\n  return (\n    <div>\n      <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n        <div className=\"Instructor-NameList\">\n          <div className=\"background\">\n            <div className=\"title\">\n              <p className=\"text\">Classroom Students List: {classInfo.title}</p>\n            </div>\n\n            <div className=\"scroll\">\n              <ul className=\"titles\">\n                {assignmentTitles}\n              </ul>\n            </div>\n\n            <div className=\"options\">\n\n              <button onClick={() => {\n                getAccessTokenSilently().then((token) => {\n                deleteStudent(id, currentStudent, token).then(() => history.go(0), (error) => console.log(error.response))\n                }, (error) => console.log(error))\n              }}>Delete Student</button>\n\n              <button onClick={() => {\n                history.push(`/instructor/classrooms/${id}`, {classroomID: id})\n              }}>Return</button>\n\n            </div>\n          </div>\n        </div>\n    </div>\n  )\n}",{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":7,"column":9,"nodeType":"114","messageId":"115","endLine":7,"endColumn":20},{"ruleId":"116","severity":1,"message":"117","line":47,"column":6,"nodeType":"118","endLine":47,"endColumn":8,"suggestions":"119"},{"ruleId":"116","severity":1,"message":"120","line":108,"column":6,"nodeType":"118","endLine":108,"endColumn":8,"suggestions":"121"},{"ruleId":"116","severity":1,"message":"117","line":45,"column":6,"nodeType":"118","endLine":45,"endColumn":19,"suggestions":"122"},{"ruleId":"116","severity":1,"message":"123","line":119,"column":6,"nodeType":"118","endLine":119,"endColumn":8,"suggestions":"124"},{"ruleId":"112","severity":1,"message":"125","line":1,"column":9,"nodeType":"114","messageId":"115","endLine":1,"endColumn":17},{"ruleId":"108","replacedBy":"126"},{"ruleId":"110","replacedBy":"127"},{"ruleId":"112","severity":1,"message":"128","line":10,"column":9,"nodeType":"114","messageId":"115","endLine":10,"endColumn":16},{"ruleId":"116","severity":1,"message":"129","line":46,"column":6,"nodeType":"118","endLine":46,"endColumn":8,"suggestions":"130"},{"ruleId":"116","severity":1,"message":"131","line":49,"column":6,"nodeType":"118","endLine":49,"endColumn":8,"suggestions":"132"},{"ruleId":"116","severity":1,"message":"120","line":166,"column":6,"nodeType":"118","endLine":166,"endColumn":8,"suggestions":"133"},{"ruleId":"116","severity":1,"message":"129","line":45,"column":6,"nodeType":"118","endLine":45,"endColumn":8,"suggestions":"134"},{"ruleId":"116","severity":1,"message":"135","line":123,"column":6,"nodeType":"118","endLine":123,"endColumn":8,"suggestions":"136"},{"ruleId":"116","severity":1,"message":"129","line":48,"column":6,"nodeType":"118","endLine":48,"endColumn":8,"suggestions":"137"},{"ruleId":"112","severity":1,"message":"138","line":5,"column":21,"nodeType":"114","messageId":"115","endLine":5,"endColumn":32},{"ruleId":"116","severity":1,"message":"123","line":50,"column":6,"nodeType":"118","endLine":50,"endColumn":8,"suggestions":"139"},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"no-unused-vars","'MessageHome' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getAccessTokenSilently' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["142"],"React Hook useEffect has a missing dependency: 'getAccessTokenSilently'. Either include it or remove the dependency array.",["143"],["144"],"React Hook useEffect has missing dependencies: 'getAccessTokenSilently' and 'id'. Either include them or remove the dependency array.",["145"],"'useAuth0' is defined but never used.",["140"],["141"],"'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'classroomID', 'getAccessTokenSilently', and 'id'. Either include them or remove the dependency array.",["146"],"React Hook useEffect has missing dependencies: 'getAccessTokenSilently', 'history', and 'id'. Either include them or remove the dependency array.",["147"],["148"],["149"],"React Hook useEffect has missing dependencies: 'Aid', 'Cid', 'assignmentTitles.description', 'assignmentTitles.title', and 'getAccessTokenSilently'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setTitle' needs the current value of 'assignmentTitles.title'.",["150"],["151"],"'useLocation' is defined but never used.",["152"],"no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"155","fix":"165"},{"desc":"161","fix":"166"},{"desc":"167","fix":"168"},{"desc":"161","fix":"169"},{"desc":"159","fix":"170"},"Update the dependencies array to be: [getAccessTokenSilently, history]",{"range":"171","text":"172"},"Update the dependencies array to be: [getAccessTokenSilently]",{"range":"173","text":"174"},"Update the dependencies array to be: [classNumber, getAccessTokenSilently, history]",{"range":"175","text":"176"},"Update the dependencies array to be: [getAccessTokenSilently, id]",{"range":"177","text":"178"},"Update the dependencies array to be: [classroomID, getAccessTokenSilently, id]",{"range":"179","text":"180"},"Update the dependencies array to be: [getAccessTokenSilently, history, id]",{"range":"181","text":"182"},{"range":"183","text":"174"},{"range":"184","text":"180"},"Update the dependencies array to be: [Aid, Cid, assignmentTitles.description, assignmentTitles.title, getAccessTokenSilently]",{"range":"185","text":"186"},{"range":"187","text":"180"},{"range":"188","text":"178"},[1296,1298],"[getAccessTokenSilently, history]",[2839,2841],"[getAccessTokenSilently]",[1280,1293],"[classNumber, getAccessTokenSilently, history]",[3288,3290],"[getAccessTokenSilently, id]",[1384,1386],"[classroomID, getAccessTokenSilently, id]",[1592,1594],"[getAccessTokenSilently, history, id]",[4790,4792],[1420,1422],[3846,3848],"[Aid, Cid, assignmentTitles.description, assignmentTitles.title, getAccessTokenSilently]",[1475,1477],[1564,1566]]