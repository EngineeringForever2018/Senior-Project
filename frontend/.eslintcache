[{"/home/gchristensen/repos/avpd/frontend/src/index.js":"1","/home/gchristensen/repos/avpd/frontend/src/App.js":"2","/home/gchristensen/repos/avpd/frontend/src/auth/auth0-provider-with-history.js":"3","/home/gchristensen/repos/avpd/frontend/src/reportWebVitals.js":"4","/home/gchristensen/repos/avpd/frontend/src/Home.js":"5","/home/gchristensen/repos/avpd/frontend/src/About.js":"6","/home/gchristensen/repos/avpd/frontend/src/student/StudentHome.js":"7","/home/gchristensen/repos/avpd/frontend/src/student/PostSubmit.js":"8","/home/gchristensen/repos/avpd/frontend/src/student/StudentAssignment.js":"9","/home/gchristensen/repos/avpd/frontend/src/Message/MessageHome.js":"10","/home/gchristensen/repos/avpd/frontend/src/student/PostSubmitList.js":"11","/home/gchristensen/repos/avpd/frontend/src/instructor/InstructorNameList.js":"12","/home/gchristensen/repos/avpd/frontend/src/instructor/InstructorClassroom.js":"13","/home/gchristensen/repos/avpd/frontend/src/instructor/ReportScreen.js":"14","/home/gchristensen/repos/avpd/frontend/src/instructor/InstructorHome.js":"15","/home/gchristensen/repos/avpd/frontend/src/instructor/InstructorAssignment.js":"16","/home/gchristensen/repos/avpd/frontend/src/instructor/InstructorSubmissions.js":"17","/home/gchristensen/repos/avpd/frontend/src/requests.js":"18","/home/gchristensen/repos/avpd/frontend/src/nav/NavBar.js":"19","/home/gchristensen/repos/avpd/frontend/src/user/logout-button.js":"20","/home/gchristensen/repos/avpd/frontend/src/utils.js":"21","/home/gchristensen/repos/avpd/frontend/src/user/login-button.js":"22"},{"size":730,"mtime":1619054109955,"results":"23","hashOfConfig":"24"},{"size":2650,"mtime":1619137023652,"results":"25","hashOfConfig":"24"},{"size":833,"mtime":1619054109955,"results":"26","hashOfConfig":"24"},{"size":362,"mtime":1619054109955,"results":"27","hashOfConfig":"24"},{"size":1286,"mtime":1619054109955,"results":"28","hashOfConfig":"24"},{"size":117,"mtime":1619054109955,"results":"29","hashOfConfig":"24"},{"size":6652,"mtime":1619054109958,"results":"30","hashOfConfig":"24"},{"size":4135,"mtime":1619054109958,"results":"31","hashOfConfig":"24"},{"size":8446,"mtime":1619054109958,"results":"32","hashOfConfig":"24"},{"size":0,"mtime":1619054109955,"results":"33","hashOfConfig":"24"},{"size":4450,"mtime":1619054109958,"results":"34","hashOfConfig":"24"},{"size":4456,"mtime":1619054109955,"results":"35","hashOfConfig":"24"},{"size":11043,"mtime":1619054109955,"results":"36","hashOfConfig":"24"},{"size":9378,"mtime":1619140575405,"results":"37","hashOfConfig":"24"},{"size":5577,"mtime":1619054109955,"results":"38","hashOfConfig":"24"},{"size":11237,"mtime":1619054109955,"results":"39","hashOfConfig":"24"},{"size":4851,"mtime":1619054109955,"results":"40","hashOfConfig":"24"},{"size":8866,"mtime":1619129658242,"results":"41","hashOfConfig":"24"},{"size":2717,"mtime":1619054109955,"results":"42","hashOfConfig":"24"},{"size":496,"mtime":1619054109958,"results":"43","hashOfConfig":"24"},{"size":284,"mtime":1619054109958,"results":"44","hashOfConfig":"24"},{"size":493,"mtime":1619054109958,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1k5043j",{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"48"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/home/gchristensen/repos/avpd/frontend/src/index.js",[],["102","103"],"/home/gchristensen/repos/avpd/frontend/src/App.js",["104","105","106"],"/home/gchristensen/repos/avpd/frontend/src/auth/auth0-provider-with-history.js",[],"/home/gchristensen/repos/avpd/frontend/src/reportWebVitals.js",[],"/home/gchristensen/repos/avpd/frontend/src/Home.js",[],"/home/gchristensen/repos/avpd/frontend/src/About.js",[],"/home/gchristensen/repos/avpd/frontend/src/student/StudentHome.js",["107","108"],"import './StudentHome.scss'\nimport {NavBar} from \"../nav/NavBar\";\n\nimport React, {useEffect, useState} from \"react\";\n\nimport {useAuth0} from \"@auth0/auth0-react\";\nimport {useHistory} from \"react-router-dom\";\nimport {getUserInfo, listAssignmentsStudent, joinClassroom} from \"../requests\";\n\n//matirial-ui imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport Container from '@material-ui/core/Container';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport grey from '@material-ui/core/colors/grey';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport InsertDriveFile from '@material-ui/icons/InsertDriveFile';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  grow: {\n    flexGrow: 1,\n  },\n}));\n\nexport function StudentHome(props) {\n  return (\n    <div>\n      <NavBar firstName={props.userData['first_name']} lastName={props.userData['last_name']}/>\n      <Essay />\n    </div>\n  )\n}\n\n//load all essays\nfunction Essay() {\n  const classes = useStyles();\n  const {getAccessTokenSilently} = useAuth0();\n  const history = useHistory()\n  const [essaysTitles, setEssaysTitles] = useState();\n  const [classNumber, setClassNumber] = useState(1);\n  const [openCurrent, setOpenCurrent] = useState(true);\n\n  function handleSetClassNumber(e) {\n    setClassNumber(e.target.value);\n  }\n\n  const handleClickOpen = () => {\n    setOpenCurrent(!openCurrent);\n  };\n\n  //used for scroll down menu for classes\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      listAssignmentsStudent(token, classNumber).then((response) => {\n        setEssaysTitles(\n          response.data.map((data) => <li>\n            <ListItem button onClick={() => {\n              history.push(`/student/classrooms/${classNumber}/assignments/${data['id']}`)}\n            } className={classes.nested} >\n              <ListItemIcon>\n                <InsertDriveFile />\n              </ListItemIcon>\n              <ListItemText primary={data['title']} />\n            </ListItem>\n          </li>)\n        )\n      })\n    })\n  }, [classNumber])\n\n  const boxCol = grey[300]\n\n  return (\n    <div>\n      <Container maxWidth=\"lg\">\n        <Box height={50} />\n        <Typography variant=\"h3\" align=\"center\">\n          Student Home\n        </Typography>\n        <Box height={50} />\n        <Box mx=\"auto\" bgcolor=\"background.paper\" borderRadius=\"borderRadius\" p={1}>\n          <Typography variant=\"h6\">\n            Select Classroom\n          </Typography>\n          <FormControl className={classes.formControl}>\n            <InputLabel htmlFor=\"age-native-simple\">Class</InputLabel>\n            <Select value={classNumber} onChange={handleSetClassNumber}>\n              <option aria-label=\"None\" value=\"\" />\n              <option value = {1}> Class 1 </option>\n              <option value = {2}> Class 2 </option>\n              <option value = {3}> Class 3 </option>\n              <option value = {4}> Class 4 </option>\n            </Select>\n            <FormHelperText>input for class number</FormHelperText>\n          </FormControl>\n        </Box>\n        <Box height={30} />\n        <Box mx=\"auto\" bgcolor=\"background.paper\" borderRadius=\"borderRadius\" p={1}>\n          <Box bgcolor={boxCol}>\n          <ListItem button onClick={handleClickOpen}>\n            <ListItemText primary=\"Current Assignments\" />\n            {openCurrent ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          </Box>\n  \n          <List component=\"div\" disablePadding>\n            <Collapse in={openCurrent} timeout=\"auto\" unmountOnExit>\n              {essaysTitles}\n            </Collapse>\n          </List>\n        </Box>\n  \n        <Box height={30} />\n        <Box mx=\"auto\" bgcolor=\"background.paper\" borderRadius=\"borderRadius\" p={1}>\n          <Typography variant=\"h6\">\n            Student Options:\n          </Typography>\n          <Button variant=\"contained\" color=\"primary\" href=\"/join-classroom\">\n            Join Classroom\n          </Button>\n        </Box>\n      </Container>\n    </div>\n  )\n}\n\n//function to create assignment needs fixing for join classfoom\nexport function JoinClassroomForm(props) {\n  const classes = useStyles();\n  const {getAccessTokenSilently} = useAuth0();\n  const history = useHistory()\n\n  const [id, setID] = useState()\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n\n  function handleChange(event) {\n    setID(event.target.value);\n  }\n\n  function handleSubmit(event) {\n    getAccessTokenSilently().then((token) => {\n      joinClassroom(id, token).then((response) => {\n        history.push('/')\n      }, (error) => console.log(error.response))\n    })\n\n    event.preventDefault()\n  }\n  \n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      getUserInfo(token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n    })\n  }, [])\n\n  return (\n    <div>\n      <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n\n      <Container maxWidth=\"md\">\n        <Box height={30} />\n        <Box mx=\"auto\" bgcolor=\"background.paper\" borderRadius=\"borderRadius\" p={1}>\n          <Typography variant=\"h6\">\n          Join Classroom\n          </Typography>\n          <form className={classes.root} noValidate autoComplete=\"off\">\n            <TextField id=\"filled-basic\" type=\"number\" label=\"Classroom Number\" variant=\"filled\" onChange={handleChange}/>\n            <Box height={20} />\n            <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\n              Submit\n            </Button>\n\n            <Button variant=\"contained\" color=\"primary\" onClick={() => {\n              history.push(`/`)\n            }}>Return</Button>\n          </form>\n        </Box>\n      </Container>\n    </div>\n  )\n}","/home/gchristensen/repos/avpd/frontend/src/student/PostSubmit.js",["109","110","111","112","113","114","115","116","117","118","119","120","121","122","123"],"import './PostSubmit.scss'\nimport React, {useEffect, useState} from \"react\";\nimport {NavBar} from \"../nav/NavBar\";\nimport {getUserInfo, viewAssignmentStudent, listSubmissionsStudent, viewSubmissionStudent} from \"../requests\";\nimport {useHistory, useParams} from \"react-router\";\nimport {useAuth0} from \"@auth0/auth0-react\";\n\n//matirial-ui imports\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport Container from '@material-ui/core/Container';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport InsertDriveFile from '@material-ui/icons/InsertDriveFile';\n\nexport function PostSubmit() {\n  const {getAccessTokenSilently} = useAuth0()\n  const history = useHistory()\n  const {classroomID, id} = useParams()\n\n  const [submitList, setSubmitList] = useState()\n  const [submitID, setSubmitID] = useState()\n  const [submitDate, setSubmitDate] = useState()\n  const [submitFile, setSubmitFile] = useState()\n  const [assignmentTitles, setAssignmentTitles] = useState({\n    id: '',\n    classroom: '',\n    title: '',\n    description: '',\n    due_date: ''\n  })\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      viewAssignmentStudent( classroomID,id, token).then((response) => {\n        setAssignmentTitles(prevState => ({\n          ...prevState,\n          id: response.data.id,\n          classroom: response.data.classroom,\n          title: response.data.title,\n          description: response.data.description,\n          due_date: response.data.due_date\n        }));\n      })\n      getUserInfo(token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n      listSubmissionsStudent(classroomID, id, token).then((response) => {\n        setSubmitList(\n          response.data.map((assignment) => <li>\n            {setSubmitID(assignment['id'])}\n            {setSubmitDate(assignment['date'])}\n            {setSubmitFile(assignment['file'])}\n          </li>)\n        )\n      })\n    })\n  }, [])\n\n  var boxSpace = 30;\n\n  return(\n    <div>\n      <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n      <Container maxWidth=\"md\">\n      <Box height={boxSpace} />\n\n      <Box mx=\"auto\" bgcolor=\"background.paper\" borderRadius=\"borderRadius\" p={1}>\n        <Typography variant=\"h6\">\n          Assignment Info\n        </Typography>\n        <p className = \"text\"> Assignment information</p>\n        <p className = \"text\"> title: {assignmentTitles.title}</p>\n        <p className = \"text\"> description: {assignmentTitles.description}</p>\n        <p className = \"text\"> due date: {assignmentTitles.due_date}</p>\n        <p className = \"text\"> submission information</p>\n        <p className = \"text\"> current ID:{submitID}</p>\n        <p className = \"text\"> current ID:{submitDate}</p>\n        <p className = \"text\"> current ID:{submitFile}</p>\n      </Box>\n\n      <Box height={boxSpace} />\n        <Box mx=\"auto\" bgcolor=\"background.paper\" borderRadius=\"borderRadius\" p={1}>\n          <Typography variant=\"h6\">\n            Student Options:\n          </Typography>\n          \n          <Button variant=\"contained\" color=\"primary\" onClick={() => {  history.push(`/student/classrooms/${classroomID}/assignments/${id}/submitList`)}}>\n            All assignments\n          </Button>\n      </Box>\n      </Container>\n    </div>\n  )\n}","/home/gchristensen/repos/avpd/frontend/src/student/StudentAssignment.js",["124","125","126","127","128","129","130","131","132","133","134","135","136","137","138"],"import './StudentAssignment.scss'\nimport React, {useEffect, useState} from \"react\";\nimport {NavBar} from \"../nav/NavBar\";\nimport {getUserInfo, viewAssignmentStudent, postSubmit} from \"../requests\";\nimport {useHistory, useParams} from \"react-router\";\nimport {useAuth0} from \"@auth0/auth0-react\";\n\n//display pdf\nimport { Viewer } from '@react-pdf-viewer/core';\nimport { Document, Page, pdfjs } from 'pdfjs-dist'\nimport pdfjsWorker from 'pdfjs-dist/build/pdf.worker.entry'\nimport '@react-pdf-viewer/core/lib/styles/index.css';\n\n//matirial-ui imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\n//open assignment\nexport function StudentAssignment() {\n  const classes = useStyles();\n  const {getAccessTokenSilently} = useAuth0()\n  const history = useHistory()\n  const {classroomID, id} = useParams()\n\n  var day = new Date().getDate(); //To get the Current Date\n  var month = new Date().getMonth() + 1; //To get the Current Month\n  var year = new Date().getFullYear(); //To get the Current Year\n  var hours = new Date().getHours(); //To get the Current Hours\n\n  //hooks used for date\n  const [date, setDate] = useState(0)\n  const [onTime, setOnTime] = useState(\"Not changed\")\n  const [timeLeft, setTimeLeft] = useState(0)\n  const [unitLeft, setUnitLeft] = useState(\"Not changed\")\n\n  const [assignmentTitles, setAssignmentTitles] = useState({\n    id: '',\n    classroom: '',\n    title: '',\n    discription: '',\n    due_date: ''\n  })\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n  const [file, setFile] = React.useState(\"\");\n\n  //run to get assignment and user data on page load\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      viewAssignmentStudent( classroomID,id, token).then((response) => {\n        setAssignmentTitles(prevState => ({\n          ...prevState,\n          id: response.data.id,\n          classroom: response.data.classroom,\n          title: response.data.title,\n          description: response.data.description,\n          due_date: response.data.due_date\n        }));\n      })\n      getUserInfo(token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n    })\n  }, [])\n\n  //run to get assignment and user data on page load\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      viewAssignmentStudent( classroomID,id, token).then((response) => {\n        setAssignmentTitles(prevState => ({\n          ...prevState,\n          id: response.data.id,\n          classroom: response.data.classroom,\n          title: response.data.title,\n          description: response.data.description,\n          due_date: response.data.due_date\n        }));\n        //changing date runs the useEffect to compare dates\n        setDate(date + 1)\n      })\n      getUserInfo(token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n    })\n  }, [])\n\n  //use effect to compare assignment time to current time down to hour\n  useEffect(() => {\n    var time = (assignmentTitles.due_date).split(\"T\")\n    var date = (time[0]).split(\"-\")\n    var today = time[1]\n    \n    if(parseInt(date[0], 10) < parseInt(year)) {\n      setOnTime(\"overdue\")\n      setUnitLeft(\"year\")\n      setTimeLeft(parseInt(year) - parseInt(date[0], 10))\n    }\n    if(parseInt(date[0], 10) > parseInt(year)) {\n      setOnTime(\"due\")\n      setUnitLeft(\"year\")\n      setTimeLeft(parseInt(date[0], 10) - parseInt(year))\n    }\n    if(parseInt(date[0], 10) == parseInt(year)) {\n      if(parseInt(date[1], 10) < parseInt(month)) {\n        setOnTime(\"overdue\")\n        setUnitLeft(\"month\")\n        setTimeLeft(parseInt(month) - parseInt(date[1], 10))\n      }\n      if(parseInt(date[1], 10) > parseInt(month)) {\n        setOnTime(\"due\")\n        setUnitLeft(\"month\")\n        setTimeLeft(parseInt(date[1], 10) - parseInt(month))\n      }\n      if(parseInt(date[1], 10) == parseInt(month)) {\n        if(parseInt(date[2], 10) < parseInt(day)) {\n          setOnTime(\"overdue\")\n          setUnitLeft(\"day\")\n          setTimeLeft(parseInt(day) - parseInt(date[2], 10))\n        }\n        if(parseInt(date[2], 10) > parseInt(day)) {\n          setOnTime(\"due\")\n          setUnitLeft(\"day\")\n          setTimeLeft(parseInt(date[2], 10) - parseInt(day))\n        }\n      }\n      if(parseInt(date[2], 10) == parseInt(day)) {\n        if(parseInt(today, 10) < parseInt(hours)) {\n          setOnTime(\"overdue\")\n          setUnitLeft(\"hours\")\n          setTimeLeft(parseInt(hours) - parseInt(today, 10))          \n        }\n        if(parseInt(today, 10) > parseInt(hours)) {\n          setOnTime(\"due\")\n          setUnitLeft(\"hours\")\n          setTimeLeft(parseInt(today, 10) - parseInt(hours))\n        }\n      }\n    }\n  }, [date])\n\n  //code to upload file automaticly uploads after file put in\n  function handleUpload(event) {\n    setFile(event.target.files[0]);\n    event.preventDefault()\n  }\n\n  //code to display file\n  const DisplayFile = ({ image }) => {\n    if(image.type == \"image/jpeg\" ) {\n      return(\n        <div className = \"StudentAssignments\">\n          <img src={URL.createObjectURL(image)} className = \"essayImage\"/>\n        </div>\n      );\n    }\n    if(image.type == \"application/pdf\" ) {    \n      return(\n        <div className = \"StudentAssignments\"> \n          <div style={{ border: '1px solid rgba(0, 0, 0, 0.3)', height: \"50em\",}}>\n            {<Viewer defaultScale={1} fileUrl={URL.createObjectURL(image)}/>}\n          </div>\n        </div>\n      )\n    }\n    return(\n      <div>\n        not able to view file type\n      </div>\n    )\n  };\n\n  const DisplayStatus = () => {\n    if(onTime == \"overdue\") {\n      return(\n        <p className = \"text\"> Assignment overdue by: {timeLeft} {unitLeft}</p>\n      )\n    } else {\n      return(\n        <p className = \"text\"> Time remaining: {timeLeft} - {unitLeft}</p>\n      )\n    }\n  }\n\n  function submitButton(event){\n    console.log(file)\n    getAccessTokenSilently().then((token) => {\n      postSubmit(classroomID,id, file, token).then((response) => {\n        history.push(`/student/classrooms/${classroomID}/assignments/${id}/submit`)\n      }, (error) => console.log(error.response))\n    })\n    event.preventDefault()\n  }\n\n  var boxSpace = 30;\n\n  return (\n    <div>\n      <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n\n      <Container maxWidth=\"md\">\n        <Box height={boxSpace} />\n\n        <Box mx=\"auto\" bgcolor=\"background.paper\" borderRadius=\"borderRadius\" p={1}>\n          <Typography variant=\"h6\">\n            Assignment Info\n          </Typography>\n          <DisplayStatus />\n          <p className = \"text\"> title: {assignmentTitles.title}</p>\n          <p className = \"text\"> description: {assignmentTitles.description}</p>\n          <p className = \"text\"> due date: {assignmentTitles.due_date}</p>\n        </Box>\n\n        <Box height={boxSpace} />\n        <Box mx=\"auto\" bgcolor=\"background.paper\" borderRadius=\"borderRadius\" p={1}>\n          <input type=\"file\" onChange={handleUpload} />\n          <p>Filename: {file.name}</p>\n          <p>File type: {file.type}</p>\n          {file && <DisplayFile image={file} />}\n        </Box>\n\n        <Box height={boxSpace} />\n        <Box mx=\"auto\" bgcolor=\"background.paper\" borderRadius=\"borderRadius\" p={1}>\n          <Typography variant=\"h6\">\n            Student Options:\n          </Typography>\n          <Button variant=\"contained\" color=\"primary\" onClick={submitButton}>\n            Submit\n          </Button>\n  \n          <Button variant=\"contained\" color=\"primary\" onClick={() => {\n            history.push(`/`)\n          }}>Return</Button>\n  \n          <Button variant=\"contained\" color=\"primary\" onClick={() => {  history.push(`/student/classrooms/${classroomID}/assignments/${id}/submitList`)}}>\n            All assignments\n          </Button>\n        </Box>\n      </Container>\n    </div>\n)\n}","/home/gchristensen/repos/avpd/frontend/src/Message/MessageHome.js",[],"/home/gchristensen/repos/avpd/frontend/src/student/PostSubmitList.js",["139","140","141"],"import './PostSubmitList.scss'\nimport React, {useEffect, useState} from \"react\";\nimport {NavBar} from \"../nav/NavBar\";\nimport {getUserInfo, viewAssignmentStudent, listSubmissionsStudent, getFile} from \"../requests\";\nimport {useHistory, useParams} from \"react-router\";\nimport {useAuth0} from \"@auth0/auth0-react\";\n\n//matirial-ui imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport Container from '@material-ui/core/Container';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport grey from '@material-ui/core/colors/grey';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport InsertDriveFile from '@material-ui/icons/InsertDriveFile';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport function PostSubmitList() {\n  const {getAccessTokenSilently} = useAuth0()\n  const history = useHistory()\n  const {classroomID, id} = useParams()\n  const classes = useStyles();\n\n  const [currentFile, setCurrentFile] = useState()\n  const [currentID, setCurrentID] = useState()\n  const [submitList, setSubmitList] = useState();\n  const [openCurrent, setOpenCurrent] = useState(true);\n\n  const [assignmentTitles, setAssignmentTitles] = useState({\n    id: '',\n    classroom: '',\n    title: '',\n    description: '',\n    due_date: ''\n  })\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      viewAssignmentStudent( classroomID,id, token).then((response) => {\n        setAssignmentTitles(prevState => ({\n          ...prevState,\n          id: response.data.id,\n          classroom: response.data.classroom,\n          title: response.data.title,\n          description: response.data.description,\n          due_date: response.data.due_date\n        }));\n      })\n      getUserInfo(token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n      listSubmissionsStudent(classroomID, id, token).then((response) => {\n        setSubmitList(\n          response.data.map((assignment) => <li>\n\n            <ListItem button onClick={() => {\n              setCurrentID(assignment['id'])\n              setCurrentFile(assignment['file'])\n            }} className={classes.nested} >\n              <ListItemIcon>\n                <InsertDriveFile />\n              </ListItemIcon>\n              <ListItemText primary={assignment['file']} />\n            </ListItem>\n          </li>)\n        )\n      })\n    })\n  }, [])\n\n  const handleClickOpen = () => {\n    setOpenCurrent(!openCurrent);\n  };\n\n  var boxSpace = 30;\n  const boxCol = grey[300]\n\n  return(\n    <div>\n      <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n\n      <Container maxWidth=\"md\">\n      <Box height={boxSpace} />\n\n      <Box mx=\"auto\" bgcolor=\"background.paper\" borderRadius=\"borderRadius\" p={1}>\n        <Typography variant=\"h6\">\n          Assignment Info\n        </Typography>\n        <p className = \"text\"> title: {assignmentTitles.title}</p>\n        <p className = \"text\"> description: {assignmentTitles.description}</p>\n        <p className = \"text\"> due date: {assignmentTitles.due_date}</p>\n        <p className = \"text\"> current ID:{currentID}</p>\n        <p className = \"text\"> current file:{currentFile}</p>\n      </Box>\n\n      <Box height={boxSpace} />\n        <Box mx=\"auto\" bgcolor=\"background.paper\" p={1}>\n          <Box bgcolor={boxCol}>\n            <ListItem button onClick={handleClickOpen}>\n              <ListItemText primary=\"Current Assignments\" />\n              {openCurrent ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n          </Box>\n\n          <List component=\"div\" disablePadding>\n            <Collapse in={openCurrent} timeout=\"auto\" unmountOnExit>\n              {submitList}\n            </Collapse>\n          </List>\n        </Box>\n      </Container>\n    </div>\n  )\n}","/home/gchristensen/repos/avpd/frontend/src/instructor/InstructorNameList.js",["142","143"],"import './InstructorNameList.scss'\nimport React, {useEffect, useState} from \"react\";\nimport {NavBar} from \"../nav/NavBar\";\nimport {getUserInfo, viewClassroom, listStudents, removeStudentFromClass} from \"../requests\";\nimport {useHistory, useLocation, useParams} from \"react-router\";\nimport {useAuth0} from \"@auth0/auth0-react\";\n\n//matirial-ui imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport grey from '@material-ui/core/colors/grey';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport InsertDriveFile from '@material-ui/icons/InsertDriveFile';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport function InstructorNameList() {\n  const classes = useStyles();\n  const {getAccessTokenSilently} = useAuth0()\n  const history = useHistory()\n  const {id} = useParams()\n\n  const [currentStudent, setCurrentStudent] = useState(0)\n  const [studentList, setStudentList] = useState()\n  const [openCurrent, setOpenCurrent] = useState(true);\n\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n  const [classInfo, setClassinfo] = useState({\n    title:''\n  })\n\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      listStudents(id, token).then((response) => {\n        setStudentList(\n          response.data.map((assignment) => <li>\n            <ListItem button onClick={() => {\n              setCurrentStudent(assignment['id'])}\n            } className={classes.nested} >\n              <ListItemIcon>\n                <InsertDriveFile />\n              </ListItemIcon>\n              <ListItemText primary={assignment['id']} />\n            </ListItem>\n          </li>)\n        )\n      })\n      getUserInfo(token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n      viewClassroom(id, token).then((response) => {\n        setClassinfo(prevState => ({\n          ...prevState,\n          title: response.data.title,\n        }));\n      })\n    })\n  }, [])\n\n  const handleClickOpen = () => {\n    setOpenCurrent(!openCurrent);\n  };\n\n  const boxCol = grey[300]\n\n  return (\n    <div>\n      <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n\n      <Container maxWidth=\"md\">\n        <Box height={50} />\n        <Typography variant=\"h3\" align=\"center\">\n          Classroom Students List: {classInfo.title}\n        </Typography>\n        <Box height={50} />\n        <Box mx=\"auto\" bgcolor=\"background.paper\" borderRadius=\"borderRadius\" p={1}>\n          <Box bgcolor={boxCol}>\n            <ListItem button onClick={handleClickOpen}>\n              <ListItemText primary=\"Classrooms\" />\n              {openCurrent ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            </Box>\n\n          <List component=\"div\" disablePadding>\n            <Collapse in={openCurrent} timeout=\"auto\" unmountOnExit>\n              {studentList}\n            </Collapse>\n          </List>\n        </Box>\n\n        <Box height={30} />\n        <Box mx=\"auto\" bgcolor=\"background.paper\" borderRadius=\"borderRadius\" p={1}>\n          <Typography variant=\"h6\">\n            Instructor Options:\n          </Typography>\n          <Button variant=\"contained\" color=\"primary\" onClick={() => {\n            getAccessTokenSilently().then((token) => {\n              removeStudentFromClass(id, currentStudent, token).then(() => history.go(0), (error) => console.log(error.response))\n            }, (error) => console.log(error))\n            }}>Delete Student</Button>\n\n            <Button variant=\"contained\" color=\"primary\" onClick={() => {\n              history.push(`/instructor/classrooms/${id}`, {classroomID: id})\n            }}>Return</Button>\n          </Box>\n      </Container>\n    </div>\n  )\n}","/home/gchristensen/repos/avpd/frontend/src/instructor/InstructorClassroom.js",["144","145","146"],"import './InstructorClassrooms.scss'\nimport React, {useEffect, useState} from \"react\";\nimport {NavBar} from \"../nav/NavBar\";\nimport {getUserInfo, viewClassroom, listAssignments, createAssignment, deleteClassroom, updateClassroom} from \"../requests\";\nimport {useHistory, useLocation, useParams} from \"react-router\";\nimport {useAuth0} from \"@auth0/auth0-react\";\nimport moment from 'moment';\n\n//matirial-ui imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport grey from '@material-ui/core/colors/grey';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport InsertDriveFile from '@material-ui/icons/InsertDriveFile';\nimport DateFnsUtils from '@date-io/date-fns';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\nexport function InstructorClassroom() {\n  const classes = useStyles();\n  const {getAccessTokenSilently} = useAuth0()\n  const history = useHistory()\n  const {id} = useParams()\n\n  const [assignmentTitles, setAssignmentTitles] = useState()\n  const [openCurrent, setOpenCurrent] = useState(true);\n\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n  const [classInfo, setClassinfo] = useState({\n    title:''\n  })\n\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      listAssignments(id, token).then((response) => {\n        setAssignmentTitles(\n          response.data.map((assignment) => <li>\n            <ListItem button onClick={() => {\n              history.push(`/instructor/classrooms/${id}/assignments/${assignment['id']}`)}\n            } className={classes.nested} >\n              <ListItemIcon>\n                <InsertDriveFile />\n              </ListItemIcon>\n              <ListItemText primary={assignment['title']} />\n            </ListItem>\n          </li>)\n        )\n      })\n      getUserInfo(token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n      viewClassroom(id, token).then((response) => {\n        setClassinfo(prevState => ({\n          ...prevState,\n          title: response.data.title,\n        }));\n      })\n    })\n  }, [])\n\n  const handleClickOpen = () => {\n    setOpenCurrent(!openCurrent);\n  };\n\n  const boxCol = grey[300]\n\n  return (\n    <div>\n      <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Container maxWidth=\"md\">\n\n        <Box height={50} />\n        <Typography variant=\"h3\" align=\"center\">\n          Classroom: {classInfo.title}\n        </Typography>\n        <Box height={50} />\n        \n        <Box mx=\"auto\" bgcolor=\"background.paper\" borderRadius=\"borderRadius\" p={1}>\n          <Box bgcolor={boxCol}>\n            <ListItem button onClick={handleClickOpen}>\n              <ListItemText primary=\"Classrooms\" />\n              {openCurrent ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n          </Box>\n\n          <List component=\"div\" disablePadding>\n            <Collapse in={openCurrent} timeout=\"auto\" unmountOnExit>\n              {assignmentTitles}\n            </Collapse>\n          </List>\n        </Box>\n        \n        <Box height={30} />\n        <Box mx=\"auto\" bgcolor=\"background.paper\" borderRadius=\"borderRadius\" p={1}>\n          <Typography variant=\"h6\">\n            Instructor Options:\n          </Typography>\n\n          <Button variant=\"contained\" color=\"primary\" onClick={() => {\n            history.push(`/create-assignment`, {classroomID: id})\n          }}>Create Assignment</Button>\n  \n          <Button variant=\"contained\" color=\"primary\" onClick={() => {\n            history.push(`/instructor/classrooms/${id}/students`, {classroomID: id})\n          }}>List Students</Button>\n\n          <Button variant=\"contained\" color=\"primary\" onClick={() => {\n            history.push(`/update-classroom`, {classID: id})\n          }}>Update Classroom</Button>\n  \n          <Button variant=\"contained\" color=\"primary\" onClick={() => {\n            getAccessTokenSilently().then((token) => {\n              deleteClassroom(id, token).then(() => history.push('/'), (error) => console.log(error.response))\n            }, (error) => console.log(error))\n          }}>Delete Classroom</Button>        \n  \n          <Button variant=\"contained\" color=\"primary\" onClick={() => {\n            history.push(`/`)\n          }}>Return</Button>\n        </Box>\n      </Container>\n      </MuiPickersUtilsProvider>\n    </div>\n  )\n}\n\n//form to update classroom\nexport function UpdateClassroomForm() {\n  const classes = useStyles();\n  const {getAccessTokenSilently} = useAuth0();\n  const history = useHistory()\n  const location = useLocation()\n  const id = location.state.classID\n\n  const [title, setTitle] = useState(\"\");\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n\n  function handleChange(event) {\n    setTitle(event.target.value);\n  }\n\n  function handleSubmit(event) {\n    getAccessTokenSilently().then((token) => {\n      updateClassroom(title, id, token).then((response) => {\n        history.push(`/instructor/classrooms/${id}`)\n      }, (error) => console.log(error.response))\n    })\n\n    event.preventDefault()\n  }\n\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      getUserInfo(token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n    })\n  }, [])\n\n  return (\n  <div>\n    <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n\n    <Container maxWidth=\"md\">\n    <Box height={30} />\n      <Box mx=\"auto\" bgcolor=\"background.paper\" borderRadius=\"borderRadius\" p={1}>\n        <Typography variant=\"h6\">\n          Update Classroom\n        </Typography>\n        <form className={classes.root} noValidate autoComplete=\"off\">\n          <TextField id=\"filled-basic\" label=\"Classroom Name\" variant=\"filled\" onChange={handleChange}/>\n          <Box height={10} />\n          <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\n            Submit\n          </Button>\n\n          <Button variant=\"contained\" color=\"primary\" onClick={() => {\n              history.push(`/instructor/classrooms/${id}`)\n            }}>Return</Button>\n        </form>\n      </Box>\n    </Container>\n  </div>\n  )\n}\n\n//function to create assignment\nexport function CreateAssignmentForm(props) {\n  const classes = useStyles();\n  const location = useLocation()\n  const id = location.state.classroomID\n  const {getAccessTokenSilently} = useAuth0()\n\n  var day = new Date().getDate(); //To get the Current Date\n  var month = new Date().getMonth() + 1; //To get the Current Month\n  var year = new Date().getFullYear(); //To get the Current Year\n\n  const [title, setTitle] = useState(\"\")\n  const [description, setDescription] = useState(\"\")\n  const [selectedDate, setSelectedDate] = useState(new Date(`${year}-01-${day}T24:00:00`));\n\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n\n  const history = useHistory()\n\n  function handleTitleChange(event) {\n    setTitle(event.target.value);\n  }\n\n  function handleDescriptionChange(event) {\n    setDescription(event.target.value)\n  }\n\n  function handleSubmit(event) {\n    getAccessTokenSilently().then((token) => {\n      createAssignment(id, title, description, {\n        'year': parseInt(moment(selectedDate).format('YYYY')),\n        'month': parseInt(moment(selectedDate).format('MM')),\n        'day': parseInt(moment(selectedDate).format('DD')),\n        'hour': parseInt(moment(selectedDate).format('HH')),\n        'minute': parseInt(moment(selectedDate).format('mm'))\n      }, token).then((response) => {\n        history.push(`/instructor/classrooms/${id}`)\n      }, (error) => console.log(error.response))\n    })\n\n    event.preventDefault()\n  }\n\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      getUserInfo(token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n    })\n    if(month < 10){\n      setSelectedDate(`${year}-0${month}-${day}T24:00:00`)\n    } else {\n      setSelectedDate(`${year}-${month}-${day}T24:00:00`)\n    }\n  }, [])\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  return (\n    <div>\n      <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Container maxWidth=\"md\">\n      <Box height={30} />\n        <Box mx=\"auto\" bgcolor=\"background.paper\" borderRadius=\"borderRadius\" p={1}>\n          <Typography variant=\"h6\">\n          Create Assignment\n          </Typography>\n          <form className={classes.root} noValidate autoComplete=\"off\">\n            <TextField id=\"filled-basic\" label=\"Title\" variant=\"filled\" onChange={handleTitleChange}/>\n            <TextField id=\"filled-basic\"  label=\"Description\" variant=\"filled\" onChange={handleDescriptionChange}/>\n            <div/>\n            <KeyboardDatePicker\n              label=\"Date picker dialog\"\n              format=\"MM/dd/yyyy\"\n              value={selectedDate}\n              onChange={handleDateChange}\n              KeyboardButtonProps={{\n                'aria-label': 'change date',\n              }}\n            />\n            <KeyboardTimePicker\n              margin=\"normal\"\n              label=\"Time picker\"\n              value={selectedDate}\n              onChange={handleDateChange}\n              KeyboardButtonProps={{\n                'aria-label': 'change time',\n              }}\n        />\n            <div/>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\n              Submit\n            </Button>\n\n            <Button variant=\"contained\" color=\"primary\" onClick={() => {\n              history.push(`/instructor/classrooms/${id}`)\n            }}>Return</Button>\n          </form>\n        </Box>\n      </Container>\n      </MuiPickersUtilsProvider>\n    </div>\n  )\n}","/home/gchristensen/repos/avpd/frontend/src/instructor/ReportScreen.js",["147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168"],"/home/gchristensen/repos/avpd/frontend/src/instructor/InstructorHome.js",["169","170"],"import './InstructorHome.scss'\nimport React, {useEffect, useState} from \"react\";\nimport {useAuth0} from \"@auth0/auth0-react\";\nimport {useHistory} from \"react-router-dom\";\nimport {NavBar} from \"../nav/NavBar\";\nimport {getUserInfo, listClassroom, createClassroom} from \"../requests\";\n\n//matirial-ui imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport grey from '@material-ui/core/colors/grey';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport InsertDriveFile from '@material-ui/icons/InsertDriveFile';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport function InstructorHome(props) {\n  return (\n    <div>\n      <Classrooms/>\n    </div>\n  )\n}\n\nfunction Classrooms() {\n  const classes = useStyles();\n  const {getAccessTokenSilently} = useAuth0();\n  const history = useHistory()\n\n  const [classroomTitles, setClassroomTitles] = useState();\n  const [openCurrent, setOpenCurrent] = useState(true);\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      listClassroom(token).then((response) => {\n        setClassroomTitles(\n          response.data.map((data) => <li>\n            <ListItem button onClick={() => {\n              history.push(`/instructor/classrooms/${data['id']}`)}\n            } className={classes.nested} >\n              <ListItemIcon>\n                <InsertDriveFile />\n              </ListItemIcon>\n              <ListItemText primary={data['title']} />\n            </ListItem>\n          </li>)\n        )\n      })\n      getUserInfo(token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n    })\n  }, [])\n\n  const handleClickOpen = () => {\n    setOpenCurrent(!openCurrent);\n  };\n\n  const boxCol = grey[300]\n\n  return (\n    <div>\n      <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n\n      <Container maxWidth=\"md\">\n        <Box height={50} />\n        <Typography variant=\"h3\" align=\"center\">\n          Instructor Home\n        </Typography>\n        <Box height={50} />\n\n        <Box mx=\"auto\" bgcolor=\"background.paper\" p={1}>\n          <Box bgcolor={boxCol}>\n            <ListItem button onClick={handleClickOpen}>\n              <ListItemText primary=\"Classrooms\" />\n              {openCurrent ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n          </Box>\n          <List component=\"div\" disablePadding>\n            <Collapse in={openCurrent} timeout=\"auto\" unmountOnExit>\n              {classroomTitles}\n            </Collapse>\n          </List>\n        </Box>\n\n        <Box height={30} />\n        <Box mx=\"auto\" bgcolor=\"background.paper\" borderRadius=\"borderRadius\" p={1}>\n          <Typography variant=\"h6\">\n            Instructor Options:\n          </Typography>\n          \n          <Button variant=\"contained\" color=\"primary\" href='/create-classroom'>\n            Create Classroom\n          </Button>\n        </Box>\n      </Container>\n    </div>\n  )\n}\n\nexport function CreateClassroomForm() {\n  const classes = useStyles();\n  const {getAccessTokenSilently} = useAuth0();\n  const history = useHistory()\n\n  const [title, setTitle] = useState(\"\");\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n\n  function handleChange(event) {\n    setTitle(event.target.value);\n  }\n\n  function handleSubmit(event) {\n    getAccessTokenSilently().then((token) => {\n      createClassroom(title, token).then((response) => {\n        history.push('/')\n      }, (error) => console.log(error.response))\n    })\n\n    event.preventDefault()\n  }\n\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      getUserInfo(token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n    })\n  }, [])\n\n  return (\n  <div>\n    <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n\n    <Container maxWidth=\"md\">\n      <Box height={30} />\n        <Box mx=\"auto\" bgcolor=\"background.paper\" borderRadius=\"borderRadius\" p={1}>\n          <Typography variant=\"h6\">\n          Create Classroom\n          </Typography>\n          <form className={classes.root} noValidate autoComplete=\"off\">\n            <TextField id=\"filled-basic\" label=\"Classroom Name\" variant=\"filled\" onChange={handleChange}/>\n            <Box height={20} />\n            <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\n              Submit\n            </Button>\n\n            <Button variant=\"contained\" color=\"primary\" onClick={() => {\n              history.push(`/`)\n            }}>Return</Button>\n      </form>\n      </Box>\n    </Container>\n  </div>\n  )\n}","/home/gchristensen/repos/avpd/frontend/src/instructor/InstructorAssignment.js",["171","172","173","174","175","176","177"],"import './InstructorAssignment.scss'\nimport React, {useEffect, useState} from \"react\";\nimport {NavBar} from \"../nav/NavBar\";\nimport {getUserInfo, deleteAssignment, updateAssignment, viewAssignment} from \"../requests\";\nimport {useHistory, useLocation, useParams} from \"react-router\";\nimport {useAuth0} from \"@auth0/auth0-react\";\nimport moment from 'moment';\n\n//matirial-ui imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\nexport function InstructorAssignment() {\n  const {getAccessTokenSilently} = useAuth0()\n  const history = useHistory()\n  const {classroomID, id} = useParams()\n\n  const [assignmentTitles, setAssignmentTitles] = useState({\n    id: '',\n    classroom: '',\n    title: '',\n    description: '',\n    due_date: ''\n  })\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n\n  var day = new Date().getDate(); //To get the Current Date\n  var month = new Date().getMonth() + 1; //To get the Current Month\n  var year = new Date().getFullYear(); //To get the Current Year\n  var hours = new Date().getHours(); //To get the Current Hours\n\n  //hooks used for date\n  const [date, setDate] = useState(0)\n  const [onTime, setOnTime] = useState(\"Not changed\")\n  const [timeLeft, setTimeLeft] = useState(0)\n  const [unitLeft, setUnitLeft] = useState(\"Not changed\")\n\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      viewAssignment( classroomID,id, token).then((response) => {\n        setAssignmentTitles(prevState => ({\n          ...prevState,\n          id: response.data.id,\n          classroom: response.data.classroom,\n          title: response.data.title,\n          description: response.data.description,\n          due_date: response.data.due_date\n        }));\n        setDate(date + 1)\n      })\n      getUserInfo(token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n    })\n  }, [])\n\n    //use effect to compare assignment time to current time down to hour\n    useEffect(() => {\n      var time = (assignmentTitles.due_date).split(\"T\")\n      var date = (time[0]).split(\"-\")\n      var today = time[1]\n      \n      if(parseInt(date[0], 10) < parseInt(year)) {\n        setOnTime(\"overdue\")\n        setUnitLeft(\"year\")\n        setTimeLeft(parseInt(year) - parseInt(date[0], 10))\n      }\n      if(parseInt(date[0], 10) > parseInt(year)) {\n        setOnTime(\"due\")\n        setUnitLeft(\"year\")\n        setTimeLeft(parseInt(date[0], 10) - parseInt(year))\n      }\n      if(parseInt(date[0], 10) == parseInt(year)) {\n        if(parseInt(date[1], 10) < parseInt(month)) {\n          setOnTime(\"overdue\")\n          setUnitLeft(\"month\")\n          setTimeLeft(parseInt(month) - parseInt(date[1], 10))\n        }\n        if(parseInt(date[1], 10) > parseInt(month)) {\n          setOnTime(\"due\")\n          setUnitLeft(\"month\")\n          setTimeLeft(parseInt(date[1], 10) - parseInt(month))\n        }\n        if(parseInt(date[1], 10) == parseInt(month)) {\n          if(parseInt(date[2], 10) < parseInt(day)) {\n            setOnTime(\"overdue\")\n            setUnitLeft(\"day\")\n            setTimeLeft(parseInt(day) - parseInt(date[2], 10))\n          }\n          if(parseInt(date[2], 10) > parseInt(day)) {\n            setOnTime(\"due\")\n            setUnitLeft(\"day\")\n            setTimeLeft(parseInt(date[2], 10) - parseInt(day))\n          }\n        }\n        if(parseInt(date[2], 10) == parseInt(day)) {\n          if(parseInt(today, 10) < parseInt(hours)) {\n            setOnTime(\"overdue\")\n            setUnitLeft(\"hours\")\n            setTimeLeft(parseInt(hours) - parseInt(today, 10))          \n          }\n          if(parseInt(today, 10) > parseInt(hours)) {\n            setOnTime(\"due\")\n            setUnitLeft(\"hours\")\n            setTimeLeft(parseInt(today, 10) - parseInt(hours))\n          }\n        }\n      }\n    }, [date])\n\n    const DisplayStatus = () => {\n      if(onTime == \"overdue\") {\n        return(\n          <p className = \"text\"> Assignment finished from: {timeLeft} {unitLeft}</p>\n        )\n      } else {\n        return(\n          <p className = \"text\"> Time remaining: {timeLeft} - {unitLeft}</p>\n        )\n      }\n    }\n\n  return (\n    <div>\n      <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n\n      <Container maxWidth=\"md\">\n        <Box height={50} />\n        <Typography variant=\"h3\" align=\"center\">\n        Assignment Info\n        </Typography>\n        <Box height={50} />\n          <Box mx=\"auto\" bgcolor=\"background.paper\" borderRadius=\"borderRadius\" p={1}>\n          <p className = \"text\"> title: {assignmentTitles.title}</p>\n          <p className = \"text\"> due date: {assignmentTitles.due_date}</p>\n          <DisplayStatus />\n          <p className = \"text\"> description: {assignmentTitles.description}</p>\n        </Box>\n\n        <Box height={30} />\n        <Box mx=\"auto\" bgcolor=\"background.paper\" borderRadius=\"borderRadius\" p={1}>\n          <Typography variant=\"h6\">\n            Instructor Options:\n          </Typography>\n          <Button variant=\"contained\" color=\"primary\" onClick={() => {\n            history.push(`/instructor/classrooms/${classroomID}/assignments/${id}/submissions`)\n          }}>List Submissions</Button>\n  \n          <Button variant=\"contained\" color=\"primary\" onClick={() => {\n            history.push('/update-assignment', \n            {classroomID: assignmentTitles.id,\n            assignmentID: assignmentTitles.classroom})\n          }}>Update Assignment</Button>\n  \n          <Button variant=\"contained\" color=\"primary\" onClick={() => {\n            getAccessTokenSilently().then((token) => {\n            deleteAssignment(classroomID, id, token).then(() =>\n            history.push('/instructor/classrooms/1'), (error) => console.log(error.response))\n            }, (error) => console.log(error))\n          }}>Delete Assignment</Button>\n  \n          <Button variant=\"contained\" color=\"primary\" onClick={() => {\n            history.push(`/instructor/classrooms/${classroomID}`, {classroomID: id})\n          }}>Return</Button>\n        </Box>\n      </Container>\n    </div>\n  )\n}\n\nexport function UpdateAssignmentForm(props) {\n  const classes = useStyles();\n  const location = useLocation()\n  const {getAccessTokenSilently} = useAuth0()\n  const history = useHistory()\n\n  const Cid = location.state.classroomID\n  const Aid = location.state.assignmentID\n\n  var day = new Date().getDate(); //To get the Current Date\n  var month = new Date().getMonth() + 1; //To get the Current Month\n  var year = new Date().getFullYear(); //To get the Current Year\n\n  const [title, setTitle] = useState(\"\")\n  const [description, setDescription] = useState(\"\")\n\n  const [selectedDate, setSelectedDate] = useState(new Date(`${year}-01-${day}T24:00:00`));\n  const [assignmentTitles, setAssignmentTitles] = useState({\n    id: '',\n    classroom: '',\n    title: '',\n    description: '',\n    due_date: ''\n  })\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      viewAssignment( Cid, Aid, token).then((response) => {\n        setAssignmentTitles(prevState => ({\n          ...prevState,\n          id: response.data.id,\n          classroom: response.data.classroom,\n          title: response.data.title,\n          description: response.data.description,\n          due_date: response.data.due_date\n        }));\n      })\n      getUserInfo(token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n    })\n    setTitle(assignmentTitles.title)\n    setDescription(assignmentTitles.description)\n    if(month < 10){\n      setSelectedDate(`${year}-0${month}-${day}T24:00:00`)\n    } else {\n      setSelectedDate(`${year}-${month}-${day}T24:00:00`)\n    }\n  }, [])\n\n  function handleTitleChange(event) {\n    setTitle(event.target.value);\n  }\n\n  function handleDescriptionChange(event) {\n    setDescription(event.target.value)\n  }\n\n  function handleSubmit(event) {\n    getAccessTokenSilently().then((token) => {\n      updateAssignment(Cid, Aid, title, description, {\n        'year': parseInt(moment(selectedDate).format('YYYY')),\n        'month': parseInt(moment(selectedDate).format('MM')),\n        'day': parseInt(moment(selectedDate).format('DD')),\n        'hour': parseInt(moment(selectedDate).format('HH')),\n        'minute': parseInt(moment(selectedDate).format('mm'))\n      }, token).then((response) => {\n        history.push(`/instructor/classrooms/${Aid}/assignments/${Cid}`)\n      }, (error) => console.log(error.response))\n    })\n    event.preventDefault()\n  }\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  return (\n    <div>\n      <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Container maxWidth=\"md\">\n      <Box height={30} />\n        <Box mx=\"auto\" bgcolor=\"background.paper\" borderRadius=\"borderRadius\" p={1}>\n          <Typography variant=\"h6\">\n          Create Assignment\n          </Typography>\n          <form className={classes.root} noValidate autoComplete=\"off\">\n            <TextField id=\"filled-basic\" label=\"Title\" variant=\"filled\" onChange={handleTitleChange}/>\n            <TextField id=\"filled-basic\"  label=\"Description\" variant=\"filled\" onChange={handleDescriptionChange}/>\n            <div/>\n            <KeyboardDatePicker\n              label=\"Date picker dialog\"\n              format=\"MM/dd/yyyy\"\n              value={selectedDate}\n              onChange={handleDateChange}\n              KeyboardButtonProps={{\n                'aria-label': 'change date',\n              }}\n            />\n            <KeyboardTimePicker\n              margin=\"normal\"\n              label=\"Time picker\"\n              value={selectedDate}\n              onChange={handleDateChange}\n              KeyboardButtonProps={{\n                'aria-label': 'change time',\n              }}\n        />\n            <div/>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\n              Submit\n            </Button>\n\n            <Button variant=\"contained\" color=\"primary\" onClick={() => {\n              history.push(`/instructor/classrooms/${Aid}/assignments/${Cid}`)\n            }}>Return</Button>\n          </form>\n        </Box>\n      </Container>\n      </MuiPickersUtilsProvider>\n    </div>\n  )\n}","/home/gchristensen/repos/avpd/frontend/src/instructor/InstructorSubmissions.js",["178","179"],"import './InstructorSubmissions.scss'\nimport React, {useEffect, useState} from \"react\";\nimport {NavBar} from \"../nav/NavBar\";\nimport {getUserInfo, viewAssignment, listSubmissions, acceptSubmission} from \"../requests\";\nimport {useHistory, useLocation, useParams} from \"react-router\";\nimport {useAuth0} from \"@auth0/auth0-react\";\n\n//matirial-ui imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport grey from '@material-ui/core/colors/grey';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport InsertDriveFile from '@material-ui/icons/InsertDriveFile';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport function InstructorSubmissionsList() {\n  const classes = useStyles();\n  const {getAccessTokenSilently} = useAuth0()\n  const history = useHistory()\n  const {id, classroomID} = useParams()\n  \n  const [submissionList, setSubmissionList] = useState()\n  const [openCurrent, setOpenCurrent] = useState(true);\n\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n  const [assignmentInfo, setAssignmentinfo] = useState({\n    title:''\n  })\n\n  const [report, setReport] = useState(0);\n  const [reportMessage, setReportMessage] = useState();\n\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      getUserInfo(token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n      viewAssignment(classroomID, id, token).then((response) => {\n        setAssignmentinfo(prevState => ({\n          ...prevState,\n          title: response.data.title,\n        }));\n      })\n      listSubmissions(classroomID, id, token).then((response) => {\n        setSubmissionList(\n          response.data.map((assignment) => <li>\n            <ListItem button onClick={() => {\n              setReport(assignment['id'])\n            }} className={classes.nested} >\n              <ListItemIcon>\n                <InsertDriveFile />\n              </ListItemIcon>\n              <ListItemText primary={assignment['file']} />\n            </ListItem>\n          </li>)\n        )\n      })\n    })\n\n  }, [])\n\n  const handleClickOpen = () => {\n    setOpenCurrent(!openCurrent);\n  };\n\n  const acceptReport = () => {\n    getAccessTokenSilently().then((token) => {\n      acceptSubmission(classroomID, id, report ,token).then((response) => {\n        setReportMessage(`report ${report} submitted`)\n      })\n    })\n  };\n\n  const boxCol = grey[300]\n\n  return (\n    <div>\n      <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n\n      <Container maxWidth=\"md\">\n        <Box height={50} />\n        <Typography variant=\"h3\" align=\"center\">\n          {assignmentInfo.title}\n        </Typography>\n        <Box height={50} />\n        <Box mx=\"auto\" bgcolor=\"background.paper\" borderRadius=\"borderRadius\" p={1}>\n        <Box bgcolor={boxCol}>\n          <ListItem button onClick={handleClickOpen}>\n            <ListItemText primary={`List of assignment submissions`}/>\n            {openCurrent ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n        </Box>\n\n          <List component=\"div\" disablePadding>\n            <Collapse in={openCurrent} timeout=\"auto\" unmountOnExit>\n              {submissionList}\n            </Collapse>\n          </List>\n\n        </Box>\n\n        <Box height={30} />\n        <Box mx=\"auto\" bgcolor=\"background.paper\" borderRadius=\"borderRadius\" p={1}>\n          <Typography variant=\"h6\">\n            Instructor Options:\n          </Typography>\n          <Button variant=\"contained\" color=\"primary\" onClick={() => {\n            history.push(`/instructor/classrooms/${classroomID}/assignments/${id}/submissions/${report}/report`)\n          }}>Show Report</Button>\n  \n          <Button variant=\"contained\" color=\"primary\" onClick={() => {\n            acceptReport()\n          }}>Accept Report</Button>\n  \n          <Button variant=\"contained\" color=\"primary\" onClick={() => {\n            history.push(`/instructor/classrooms/${classroomID}/assignments/${id}`)\n          }}>Return</Button>\n        </Box>\n\n        <div />\n        {reportMessage}\n\n      </Container>\n    </div>\n  )\n}\n","/home/gchristensen/repos/avpd/frontend/src/requests.js",[],"/home/gchristensen/repos/avpd/frontend/src/nav/NavBar.js",["180","181","182","183","184"],"import \"./NavBar.scss\"\nimport bell from \"../images/bell.svg\"\nimport defaultAvatar from \"../images/default_avatar.svg\"\nimport React, {useEffect, useState} from \"react\";\nimport LoginButton from \"../user/login-button\";\nimport LogoutButton from \"../user/logout-button\";\nimport {useHistory} from \"react-router-dom\";\n\n//matirial-ui imports\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { AppBar, Button } from '@material-ui/core';\nimport Badge from '@material-ui/core/Badge';\nimport { Typography } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\n\n\nimport Mail from '@material-ui/icons/Mail';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n}));\n\nfunction NavBar(props) {\n  const history = useHistory()\n  const classes = useStyles();\n  const [mail, setMail] = useState(0)\n\n  return (\n    <div>\n      <AppBar position = \"static\">\n        <Toolbar variant=\"dense\">\n         <Button variant=\"contained\" color=\"primary\" onClick={() => {\n            history.push(`/`)\n          }}>Home</Button>\n\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Authorship Verification for Plagiarism Detection(AVPD)\n          </Typography>\n\n          <div className={classes.grow} />\n          \n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            {`${props.firstName} ${props.lastName}`}\n          </Typography>\n\n          <AccountCircle />\n\n          <div className={classes.sectionDesktop}>\n            <IconButton color=\"inherit\">\n              <Badge badgeContent={mail} color=\"secondary\">\n                <Mail />\n              </Badge>\n            </IconButton>\n            <LogoutButton/>\n          </div>\n\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nfunction UnauthenticatedNavBar() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <AppBar position = \"static\">\n        <Toolbar variant=\"dense\">\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Authorship Verification for Plagiarism Detection(AVPD)\n          </Typography>\n\n          <div className={classes.grow} />\n\n          <div className={classes.sectionDesktop}>\n            <LoginButton/>\n          </div>\n\n        </Toolbar>\n      </AppBar>\n    </div>\n  )\n}\n\nexport {NavBar, UnauthenticatedNavBar};","/home/gchristensen/repos/avpd/frontend/src/user/logout-button.js",[],"/home/gchristensen/repos/avpd/frontend/src/utils.js",["185"],"import {useAuth0} from \"@auth0/auth0-react\";\n\nexport function serverUrl() {\n  return process.env.REACT_APP_SERVER_URL;\n}\n\nexport async function authenticateRequest(requestConfig, token) {\n  requestConfig.headers = {\n    'Authorization': `Bearer ${token}`\n  }\n\n  return requestConfig\n}","/home/gchristensen/repos/avpd/frontend/src/user/login-button.js",[],{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":5,"column":8,"nodeType":"192","messageId":"193","endLine":5,"endColumn":17},{"ruleId":"190","severity":1,"message":"194","line":5,"column":21,"nodeType":"192","messageId":"193","endLine":5,"endColumn":32},{"ruleId":"190","severity":1,"message":"195","line":9,"column":9,"nodeType":"192","messageId":"193","endLine":9,"endColumn":20},{"ruleId":"196","severity":1,"message":"197","line":88,"column":6,"nodeType":"198","endLine":88,"endColumn":19,"suggestions":"199"},{"ruleId":"196","severity":1,"message":"200","line":182,"column":6,"nodeType":"198","endLine":182,"endColumn":8,"suggestions":"201"},{"ruleId":"190","severity":1,"message":"202","line":4,"column":69,"nodeType":"192","messageId":"193","endLine":4,"endColumn":90},{"ruleId":"190","severity":1,"message":"203","line":10,"column":8,"nodeType":"192","messageId":"193","endLine":10,"endColumn":16},{"ruleId":"190","severity":1,"message":"204","line":12,"column":8,"nodeType":"192","messageId":"193","endLine":12,"endColumn":18},{"ruleId":"190","severity":1,"message":"205","line":13,"column":8,"nodeType":"192","messageId":"193","endLine":13,"endColumn":22},{"ruleId":"190","severity":1,"message":"206","line":14,"column":8,"nodeType":"192","messageId":"193","endLine":14,"endColumn":19},{"ruleId":"190","severity":1,"message":"207","line":15,"column":8,"nodeType":"192","messageId":"193","endLine":15,"endColumn":14},{"ruleId":"190","severity":1,"message":"208","line":18,"column":8,"nodeType":"192","messageId":"193","endLine":18,"endColumn":12},{"ruleId":"190","severity":1,"message":"209","line":19,"column":8,"nodeType":"192","messageId":"193","endLine":19,"endColumn":16},{"ruleId":"190","severity":1,"message":"210","line":20,"column":8,"nodeType":"192","messageId":"193","endLine":20,"endColumn":20},{"ruleId":"190","severity":1,"message":"211","line":21,"column":8,"nodeType":"192","messageId":"193","endLine":21,"endColumn":20},{"ruleId":"190","severity":1,"message":"212","line":22,"column":8,"nodeType":"192","messageId":"193","endLine":22,"endColumn":18},{"ruleId":"190","severity":1,"message":"213","line":23,"column":8,"nodeType":"192","messageId":"193","endLine":23,"endColumn":18},{"ruleId":"190","severity":1,"message":"214","line":24,"column":8,"nodeType":"192","messageId":"193","endLine":24,"endColumn":23},{"ruleId":"190","severity":1,"message":"215","line":31,"column":10,"nodeType":"192","messageId":"193","endLine":31,"endColumn":20},{"ruleId":"196","severity":1,"message":"216","line":76,"column":6,"nodeType":"198","endLine":76,"endColumn":8,"suggestions":"217"},{"ruleId":"190","severity":1,"message":"218","line":10,"column":10,"nodeType":"192","messageId":"193","endLine":10,"endColumn":18},{"ruleId":"190","severity":1,"message":"219","line":10,"column":20,"nodeType":"192","messageId":"193","endLine":10,"endColumn":24},{"ruleId":"190","severity":1,"message":"220","line":10,"column":26,"nodeType":"192","messageId":"193","endLine":10,"endColumn":31},{"ruleId":"190","severity":1,"message":"221","line":11,"column":8,"nodeType":"192","messageId":"193","endLine":11,"endColumn":19},{"ruleId":"190","severity":1,"message":"222","line":34,"column":9,"nodeType":"192","messageId":"193","endLine":34,"endColumn":16},{"ruleId":"196","severity":1,"message":"216","line":84,"column":6,"nodeType":"198","endLine":84,"endColumn":8,"suggestions":"223"},{"ruleId":"196","severity":1,"message":"224","line":109,"column":6,"nodeType":"198","endLine":109,"endColumn":8,"suggestions":"225"},{"ruleId":"226","severity":1,"message":"227","line":127,"column":30,"nodeType":"228","messageId":"229","endLine":127,"endColumn":32},{"ruleId":"226","severity":1,"message":"227","line":138,"column":32,"nodeType":"228","messageId":"229","endLine":138,"endColumn":34},{"ruleId":"226","severity":1,"message":"227","line":150,"column":32,"nodeType":"228","messageId":"229","endLine":150,"endColumn":34},{"ruleId":"196","severity":1,"message":"230","line":163,"column":6,"nodeType":"198","endLine":163,"endColumn":12,"suggestions":"231"},{"ruleId":"226","severity":1,"message":"227","line":173,"column":19,"nodeType":"228","messageId":"229","endLine":173,"endColumn":21},{"ruleId":"232","severity":1,"message":"233","line":176,"column":11,"nodeType":"234","endLine":176,"endColumn":75},{"ruleId":"226","severity":1,"message":"227","line":180,"column":19,"nodeType":"228","messageId":"229","endLine":180,"endColumn":21},{"ruleId":"226","severity":1,"message":"227","line":197,"column":15,"nodeType":"228","messageId":"229","endLine":197,"endColumn":17},{"ruleId":"190","severity":1,"message":"235","line":4,"column":69,"nodeType":"192","messageId":"193","endLine":4,"endColumn":76},{"ruleId":"190","severity":1,"message":"236","line":35,"column":9,"nodeType":"192","messageId":"193","endLine":35,"endColumn":16},{"ruleId":"196","severity":1,"message":"237","line":92,"column":6,"nodeType":"198","endLine":92,"endColumn":8,"suggestions":"238"},{"ruleId":"190","severity":1,"message":"239","line":5,"column":21,"nodeType":"192","messageId":"193","endLine":5,"endColumn":32},{"ruleId":"196","severity":1,"message":"240","line":82,"column":6,"nodeType":"198","endLine":82,"endColumn":8,"suggestions":"241"},{"ruleId":"196","severity":1,"message":"242","line":95,"column":6,"nodeType":"198","endLine":95,"endColumn":8,"suggestions":"243"},{"ruleId":"196","severity":1,"message":"200","line":202,"column":6,"nodeType":"198","endLine":202,"endColumn":8,"suggestions":"244"},{"ruleId":"196","severity":1,"message":"245","line":292,"column":6,"nodeType":"198","endLine":292,"endColumn":8,"suggestions":"246"},{"ruleId":"190","severity":1,"message":"247","line":7,"column":9,"nodeType":"192","messageId":"193","endLine":7,"endColumn":26},{"ruleId":"190","severity":1,"message":"248","line":9,"column":20,"nodeType":"192","messageId":"193","endLine":9,"endColumn":38},{"ruleId":"190","severity":1,"message":"249","line":12,"column":10,"nodeType":"192","messageId":"193","endLine":12,"endColumn":16},{"ruleId":"190","severity":1,"message":"250","line":12,"column":17,"nodeType":"192","messageId":"193","endLine":12,"endColumn":33},{"ruleId":"190","severity":1,"message":"218","line":13,"column":10,"nodeType":"192","messageId":"193","endLine":13,"endColumn":18},{"ruleId":"190","severity":1,"message":"219","line":13,"column":20,"nodeType":"192","messageId":"193","endLine":13,"endColumn":24},{"ruleId":"190","severity":1,"message":"220","line":13,"column":26,"nodeType":"192","messageId":"193","endLine":13,"endColumn":31},{"ruleId":"190","severity":1,"message":"221","line":14,"column":8,"nodeType":"192","messageId":"193","endLine":14,"endColumn":19},{"ruleId":"190","severity":1,"message":"222","line":64,"column":9,"nodeType":"192","messageId":"193","endLine":64,"endColumn":16},{"ruleId":"196","severity":1,"message":"200","line":92,"column":6,"nodeType":"198","endLine":92,"endColumn":8,"suggestions":"251"},{"ruleId":"190","severity":1,"message":"252","line":141,"column":9,"nodeType":"192","messageId":"193","endLine":141,"endColumn":23},{"ruleId":"190","severity":1,"message":"222","line":144,"column":9,"nodeType":"192","messageId":"193","endLine":144,"endColumn":16},{"ruleId":"190","severity":1,"message":"253","line":148,"column":9,"nodeType":"192","messageId":"193","endLine":148,"endColumn":17},{"ruleId":"190","severity":1,"message":"254","line":153,"column":10,"nodeType":"192","messageId":"193","endLine":153,"endColumn":14},{"ruleId":"190","severity":1,"message":"255","line":188,"column":9,"nodeType":"192","messageId":"193","endLine":188,"endColumn":20},{"ruleId":"190","severity":1,"message":"256","line":200,"column":12,"nodeType":"192","messageId":"193","endLine":200,"endColumn":24},{"ruleId":"196","severity":1,"message":"200","line":228,"column":6,"nodeType":"198","endLine":228,"endColumn":8,"suggestions":"257"},{"ruleId":"258","severity":1,"message":"259","line":239,"column":117,"nodeType":"260","endLine":239,"endColumn":122},{"ruleId":"258","severity":1,"message":"259","line":242,"column":117,"nodeType":"260","endLine":242,"endColumn":122},{"ruleId":"258","severity":1,"message":"259","line":253,"column":109,"nodeType":"260","endLine":253,"endColumn":114},{"ruleId":"258","severity":1,"message":"259","line":259,"column":109,"nodeType":"260","endLine":259,"endColumn":114},{"ruleId":"258","severity":1,"message":"259","line":265,"column":109,"nodeType":"260","endLine":265,"endColumn":114},{"ruleId":"196","severity":1,"message":"197","line":79,"column":6,"nodeType":"198","endLine":79,"endColumn":8,"suggestions":"261"},{"ruleId":"196","severity":1,"message":"200","line":162,"column":6,"nodeType":"198","endLine":162,"endColumn":8,"suggestions":"262"},{"ruleId":"196","severity":1,"message":"224","line":88,"column":6,"nodeType":"198","endLine":88,"endColumn":8,"suggestions":"263"},{"ruleId":"226","severity":1,"message":"227","line":106,"column":32,"nodeType":"228","messageId":"229","endLine":106,"endColumn":34},{"ruleId":"226","severity":1,"message":"227","line":117,"column":34,"nodeType":"228","messageId":"229","endLine":117,"endColumn":36},{"ruleId":"226","severity":1,"message":"227","line":129,"column":34,"nodeType":"228","messageId":"229","endLine":129,"endColumn":36},{"ruleId":"196","severity":1,"message":"230","line":142,"column":8,"nodeType":"198","endLine":142,"endColumn":14,"suggestions":"264"},{"ruleId":"226","severity":1,"message":"227","line":145,"column":17,"nodeType":"228","messageId":"229","endLine":145,"endColumn":19},{"ruleId":"196","severity":1,"message":"265","line":260,"column":6,"nodeType":"198","endLine":260,"endColumn":8,"suggestions":"266"},{"ruleId":"190","severity":1,"message":"239","line":5,"column":21,"nodeType":"192","messageId":"193","endLine":5,"endColumn":32},{"ruleId":"196","severity":1,"message":"237","line":85,"column":6,"nodeType":"198","endLine":85,"endColumn":8,"suggestions":"267"},{"ruleId":"190","severity":1,"message":"268","line":2,"column":8,"nodeType":"192","messageId":"193","endLine":2,"endColumn":12},{"ruleId":"190","severity":1,"message":"269","line":3,"column":8,"nodeType":"192","messageId":"193","endLine":3,"endColumn":21},{"ruleId":"190","severity":1,"message":"270","line":4,"column":16,"nodeType":"192","messageId":"193","endLine":4,"endColumn":25},{"ruleId":"190","severity":1,"message":"271","line":10,"column":10,"nodeType":"192","messageId":"193","endLine":10,"endColumn":14},{"ruleId":"190","severity":1,"message":"272","line":45,"column":16,"nodeType":"192","messageId":"193","endLine":45,"endColumn":23},{"ruleId":"190","severity":1,"message":"273","line":1,"column":9,"nodeType":"192","messageId":"193","endLine":1,"endColumn":17},"no-native-reassign",["274"],"no-negated-in-lhs",["275"],"no-unused-vars","'DocViewer' is defined but never used.","Identifier","unusedVar","'PNGRenderer' is defined but never used.","'MessageHome' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'classes.nested', 'getAccessTokenSilently', and 'history'. Either include them or remove the dependency array.","ArrayExpression",["276"],"React Hook useEffect has a missing dependency: 'getAccessTokenSilently'. Either include it or remove the dependency array.",["277"],"'viewSubmissionStudent' is defined but never used.","'Collapse' is defined but never used.","'InputLabel' is defined but never used.","'FormHelperText' is defined but never used.","'FormControl' is defined but never used.","'Select' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'ExpandLess' is defined but never used.","'ExpandMore' is defined but never used.","'InsertDriveFile' is defined but never used.","'submitList' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'classroomID', 'getAccessTokenSilently', and 'id'. Either include them or remove the dependency array.",["278"],"'Document' is defined but never used.","'Page' is defined but never used.","'pdfjs' is defined but never used.","'pdfjsWorker' is defined but never used.","'classes' is assigned a value but never used.",["279"],"React Hook useEffect has missing dependencies: 'classroomID', 'date', 'getAccessTokenSilently', and 'id'. Either include them or remove the dependency array. You can also do a functional update 'setDate(d => ...)' if you only need 'date' in the 'setDate' call.",["280"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'assignmentTitles.due_date', 'day', 'hours', 'month', and 'year'. Either include them or remove the dependency array.",["281"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'getFile' is defined but never used.","'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'classes.nested', 'classroomID', 'getAccessTokenSilently', and 'id'. Either include them or remove the dependency array.",["282"],"'useLocation' is defined but never used.","React Hook useEffect has missing dependencies: 'classes.nested', 'getAccessTokenSilently', and 'id'. Either include them or remove the dependency array.",["283"],"React Hook useEffect has missing dependencies: 'classes.nested', 'getAccessTokenSilently', 'history', and 'id'. Either include them or remove the dependency array.",["284"],["285"],"React Hook useEffect has missing dependencies: 'day', 'getAccessTokenSilently', 'month', and 'year'. Either include them or remove the dependency array.",["286"],"'getDetailedReport' is defined but never used.","'DocViewerRenderers' is defined but never used.","'Viewer' is defined but never used.","'SpecialZoomLevel' is defined but never used.",["287"],"'authorshipFlag' is assigned a value but never used.","'location' is assigned a value but never used.","'file' is assigned a value but never used.","'DisplayFlag' is assigned a value but never used.","'handleUpload' is defined but never used.",["288"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["289"],["290"],["291"],["292"],"React Hook useEffect has missing dependencies: 'Aid', 'Cid', 'assignmentTitles.description', 'assignmentTitles.title', 'day', 'getAccessTokenSilently', 'month', and 'year'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setTitle' needs the current value of 'assignmentTitles.title'.",["293"],["294"],"'bell' is defined but never used.","'defaultAvatar' is defined but never used.","'useEffect' is defined but never used.","'fade' is defined but never used.","'setMail' is assigned a value but never used.","'useAuth0' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"299","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"297","fix":"312"},{"desc":"313","fix":"314"},{"desc":"297","fix":"315"},{"desc":"297","fix":"316"},{"desc":"317","fix":"318"},{"desc":"297","fix":"319"},{"desc":"302","fix":"320"},{"desc":"304","fix":"321"},{"desc":"322","fix":"323"},{"desc":"306","fix":"324"},"Update the dependencies array to be: [classNumber, classes.nested, getAccessTokenSilently, history]",{"range":"325","text":"326"},"Update the dependencies array to be: [getAccessTokenSilently]",{"range":"327","text":"328"},"Update the dependencies array to be: [classroomID, getAccessTokenSilently, id]",{"range":"329","text":"330"},{"range":"331","text":"330"},"Update the dependencies array to be: [classroomID, date, getAccessTokenSilently, id]",{"range":"332","text":"333"},"Update the dependencies array to be: [assignmentTitles.due_date, date, day, hours, month, year]",{"range":"334","text":"335"},"Update the dependencies array to be: [classes.nested, classroomID, getAccessTokenSilently, id]",{"range":"336","text":"337"},"Update the dependencies array to be: [classes.nested, getAccessTokenSilently, id]",{"range":"338","text":"339"},"Update the dependencies array to be: [classes.nested, getAccessTokenSilently, history, id]",{"range":"340","text":"341"},{"range":"342","text":"328"},"Update the dependencies array to be: [day, getAccessTokenSilently, month, year]",{"range":"343","text":"344"},{"range":"345","text":"328"},{"range":"346","text":"328"},"Update the dependencies array to be: [classes.nested, getAccessTokenSilently, history]",{"range":"347","text":"348"},{"range":"349","text":"328"},{"range":"350","text":"333"},{"range":"351","text":"335"},"Update the dependencies array to be: [Aid, Cid, assignmentTitles.description, assignmentTitles.title, day, getAccessTokenSilently, month, year]",{"range":"352","text":"353"},{"range":"354","text":"337"},[2836,2849],"[classNumber, classes.nested, getAccessTokenSilently, history]",[5762,5764],"[getAccessTokenSilently]",[2788,2790],"[classroomID, getAccessTokenSilently, id]",[2677,2679],[3503,3505],"[classroomID, date, getAccessTokenSilently, id]",[5319,5325],"[assignmentTitles.due_date, date, day, hours, month, year]",[3061,3063],"[classes.nested, classroomID, getAccessTokenSilently, id]",[2721,2723],"[classes.nested, getAccessTokenSilently, id]",[3088,3090],"[classes.nested, getAccessTokenSilently, history, id]",[6442,6444],[9285,9287],"[day, getAccessTokenSilently, month, year]",[2693,2695],[6855,6857],[2508,2510],"[classes.nested, getAccessTokenSilently, history]",[4719,4721],[2683,2685],[4605,4611],[8652,8654],"[Aid, Cid, assignmentTitles.description, assignmentTitles.title, day, getAccessTokenSilently, month, year]",[2835,2837]]