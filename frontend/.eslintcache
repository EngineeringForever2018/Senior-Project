[{"/home/gchristensen/base/repos/avpd/frontend/src/index.js":"1","/home/gchristensen/base/repos/avpd/frontend/src/reportWebVitals.js":"2","/home/gchristensen/base/repos/avpd/frontend/src/App.js":"3","/home/gchristensen/base/repos/avpd/frontend/src/auth/auth0-provider-with-history.js":"4","/home/gchristensen/base/repos/avpd/frontend/src/student/StudentAssignment.js":"5","/home/gchristensen/base/repos/avpd/frontend/src/student/PostSubmit.js":"6","/home/gchristensen/base/repos/avpd/frontend/src/Home.js":"7","/home/gchristensen/base/repos/avpd/frontend/src/About.js":"8","/home/gchristensen/base/repos/avpd/frontend/src/student/StudentHome.js":"9","/home/gchristensen/base/repos/avpd/frontend/src/student/PostSubmitList.js":"10","/home/gchristensen/base/repos/avpd/frontend/src/instructor/InstructorNameList.js":"11","/home/gchristensen/base/repos/avpd/frontend/src/instructor/InstructorHome.js":"12","/home/gchristensen/base/repos/avpd/frontend/src/instructor/ReportScreen.js":"13","/home/gchristensen/base/repos/avpd/frontend/src/Message/MessageHome.js":"14","/home/gchristensen/base/repos/avpd/frontend/src/instructor/InstructorClassroom.js":"15","/home/gchristensen/base/repos/avpd/frontend/src/instructor/InstructorSubmissions.js":"16","/home/gchristensen/base/repos/avpd/frontend/src/instructor/InstructorAssignment.js":"17","/home/gchristensen/base/repos/avpd/frontend/src/requests.js":"18","/home/gchristensen/base/repos/avpd/frontend/src/nav/NavBar.js":"19","/home/gchristensen/base/repos/avpd/frontend/src/user/logout-button.js":"20","/home/gchristensen/base/repos/avpd/frontend/src/utils.js":"21","/home/gchristensen/base/repos/avpd/frontend/src/user/login-button.js":"22"},{"size":730,"mtime":1616060148912,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1616060148914,"results":"25","hashOfConfig":"24"},{"size":2574,"mtime":1616066838434,"results":"26","hashOfConfig":"24"},{"size":833,"mtime":1616060148910,"results":"27","hashOfConfig":"24"},{"size":3647,"mtime":1616062727893,"results":"28","hashOfConfig":"24"},{"size":2828,"mtime":1616062727892,"results":"29","hashOfConfig":"24"},{"size":1286,"mtime":1616062727888,"results":"30","hashOfConfig":"24"},{"size":117,"mtime":1616060148909,"results":"31","hashOfConfig":"24"},{"size":3952,"mtime":1616062727893,"results":"32","hashOfConfig":"24"},{"size":2615,"mtime":1616062727893,"results":"33","hashOfConfig":"24"},{"size":2608,"mtime":1616062727890,"results":"34","hashOfConfig":"24"},{"size":3389,"mtime":1616062727890,"results":"35","hashOfConfig":"24"},{"size":4657,"mtime":1616061317702,"results":"36","hashOfConfig":"24"},{"size":0,"mtime":1616062727888,"results":"37","hashOfConfig":"24"},{"size":8052,"mtime":1616062727889,"results":"38","hashOfConfig":"24"},{"size":2310,"mtime":1616068383941,"results":"39","hashOfConfig":"24"},{"size":7051,"mtime":1616062727889,"results":"40","hashOfConfig":"24"},{"size":8146,"mtime":1616067204950,"results":"41","hashOfConfig":"24"},{"size":1174,"mtime":1616062727892,"results":"42","hashOfConfig":"24"},{"size":375,"mtime":1616060148915,"results":"43","hashOfConfig":"24"},{"size":284,"mtime":1616060148915,"results":"44","hashOfConfig":"24"},{"size":327,"mtime":1616060148915,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"niq7as",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"48"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"/home/gchristensen/base/repos/avpd/frontend/src/index.js",[],["103","104"],"/home/gchristensen/base/repos/avpd/frontend/src/reportWebVitals.js",[],"/home/gchristensen/base/repos/avpd/frontend/src/App.js",["105"],"import './App.scss';\nimport {Route,} from 'react-router-dom';\nimport {Switch} from 'react-router';\nimport React from \"react\";\nimport {Home} from \"./Home\";\nimport About from \"./About\";\nimport {MessageHome} from \"./Message/MessageHome\"\n//instructor imports\nimport ReportScreen from \"./instructor/ReportScreen\";\nimport {CreateClassroomForm} from \"./instructor/InstructorHome\";\nimport {InstructorClassroom, CreateAssignmentForm, UpdateClassroomForm} from \"./instructor/InstructorClassroom\";\nimport {InstructorNameList} from \"./instructor/InstructorNameList\";\nimport {InstructorAssignment, UpdateAssignmentForm} from \"./instructor/InstructorAssignment\";\nimport {InstructorSubmissionsList} from \"./instructor/InstructorSubmissions\";\n\n//student Inports\nimport {JoinClassroomForm} from \"./student/StudentHome\";\nimport {StudentAssignment} from \"./student/StudentAssignment.js\";\nimport {PostSubmit} from \"./student/PostSubmit.js\";\nimport {PostSubmitList} from \"./student/PostSubmitList\";\n\nfunction App() {\n  return (\n    <Main/>\n  );\n}\n\nfunction Main() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Home}/>\n      <Route exact path=\"/about\" component={About}/>\n      {/* forms instructor*/}\n      <Route exact path=\"/create-classroom\" component={CreateClassroomForm}/>\n      <Route exact path=\"/update-classroom\" component={UpdateClassroomForm}/>\n      <Route exact path=\"/create-assignment\" component={CreateAssignmentForm}/>\n      <Route exact path=\"/update-assignment\" component={UpdateAssignmentForm}/>\n      <Route exact path=\"/join-classroom\" component={JoinClassroomForm}/>\n      {/*intructor menu*/}\n      <Route exact path=\"/instructor/classrooms/:id\" component={InstructorClassroom}/>\n      <Route exact path=\"/instructor/classrooms/:classroomID/assignments/:id\" component={InstructorAssignment}/>\n      <Route exact path=\"/instructor/classrooms/:id/students\" component={InstructorNameList}/>\n      <Route exact path=\"/instructor/classrooms/:classroomID/assignments/:id/submissions\" component={InstructorSubmissionsList}/>\n      {/*Student menu*/}\n      <Route exact path=\"/student/classrooms/:classroomID/assignments/:id\" component={StudentAssignment}/>\n      <Route exact path=\"/student/classrooms/:classroomID/assignments/:id/submit\" component={PostSubmit}/>\n      <Route exact path=\"/student/classrooms/:classroomID/assignments/:id/submitList\" component={PostSubmitList}/>\n      <Route exact path=\"/instructor/classrooms/:classroomID/assignments/:assignmentID/submissions/:id/report\" component={ReportScreen}/>\n    </Switch>\n  )\n}\n\nexport default App;\n","/home/gchristensen/base/repos/avpd/frontend/src/auth/auth0-provider-with-history.js",[],"/home/gchristensen/base/repos/avpd/frontend/src/student/StudentAssignment.js",["106","107","108","109","110","111"],"import './StudentAssignment.scss'\nimport React, {useEffect, useState} from \"react\";\nimport {NavBar} from \"../nav/NavBar\";\nimport {getUserInfo, viewAssignmentStudent, postSubmit} from \"../requests\";\nimport {useHistory, useParams} from \"react-router\";\nimport {useAuth0} from \"@auth0/auth0-react\";\n\n//open assignment\nexport function StudentAssignment() {\n  const {getAccessTokenSilently} = useAuth0()\n  const history = useHistory()\n  const {classroomID, id} = useParams()\n\n  var date = new Date().getDate(); //To get the Current Date\n  var month = new Date().getMonth() + 1; //To get the Current Month\n  var year = new Date().getFullYear(); //To get the Current Year\n  var hours = new Date().getHours(); //To get the Current Hours\n\n  const [onTime, setOnTime] = useState(\"Over Due\")\n  const [assignmentTitles, setAssignmentTitles] = useState({\n    id: '',\n    classroom: '',\n    title: '',\n    discription: '',\n    due_date: ''\n  })\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n  const [file, setFile] = React.useState(\"\");\n\n  //run to get assignment and user data on page load\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      viewAssignmentStudent( classroomID,id, token).then((response) => {\n        setAssignmentTitles(prevState => ({\n          ...prevState,\n          id: response.data.id,\n          classroom: response.data.classroom,\n          title: response.data.title,\n          description: response.data.description,\n          due_date: response.data.due_date\n        }));\n      })\n      getUserInfo(token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n    })\n  }, [])\n\n  useEffect(() => {\n    var date = (assignmentTitles.due_date).split(\"-\")\n    console.log(parseInt(date[0], 10))\n    if(parseInt(date[0], 10) > year) {\n      setOnTime(\"on time over year\")\n    } else if (parseInt(date[0], 10) == year) {\n      if(parseInt(date[1], 10) <= month) {\n        setOnTime(\"not on time month\")\n      }\n      if(parseInt(date[2], 10) <= date) {\n        setOnTime(\"not on time day\")\n      }\n    }\n  }, [])\n\n  //code to upload file automaticly uploads after file put in\n  function handleUpload(event) {\n    setFile(event.target.files[0]);\n    event.preventDefault()\n  }\n\n  const ImageThumb = ({ image }) => {\n    return <img src={URL.createObjectURL(image)} alt={image.name}  className = \"essayImage\"/>;\n  };\n\n  function submitButton(event){\n    console.log(file)\n    getAccessTokenSilently().then((token) => {\n      postSubmit(classroomID,id, file, token).then((response) => {\n        history.push(`/student/classrooms/${classroomID}/assignments/${id}/submit`)\n      }, (error) => console.log(error.response))\n    })\n    event.preventDefault()\n  }\n\n  return (\n      <div>\n        <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n        <div className = \"StudentAssignments\">\n          <div className = \"background\">\n            <p className = \"text\"> title: {assignmentTitles.title}</p>\n            <p className = \"text\"> description: {assignmentTitles.description}</p>\n            <p className = \"text\"> due date: {assignmentTitles.due_date}</p>\n\n            <input type=\"file\" onChange={handleUpload} />\n            <p>Filename: {file.name}</p>\n            <p>File type: {file.type}</p>\n            {file && <ImageThumb image={file} />}\n\n            <div/>\n            <button onClick={submitButton}>\n              submit\n            </button>\n\n          </div>\n        </div>\n      </div>\n  )\n}","/home/gchristensen/base/repos/avpd/frontend/src/student/PostSubmit.js",["112","113","114"],"import './PostSubmit.scss'\nimport React, {useEffect, useState} from \"react\";\nimport {NavBar} from \"../nav/NavBar\";\nimport {getUserInfo, viewAssignmentStudent, listSubmissionsStudent, viewSubmissionStudent} from \"../requests\";\nimport {useHistory, useParams} from \"react-router\";\nimport {useAuth0} from \"@auth0/auth0-react\";\n\nexport function PostSubmit() {\n  const {getAccessTokenSilently} = useAuth0()\n  const history = useHistory()\n  const {classroomID, id} = useParams()\n\n  const [submitList, setSubmitList] = useState()\n  const [submitID, setSubmitID] = useState()\n  const [submitDate, setSubmitDate] = useState()\n  const [submitFile, setSubmitFile] = useState()\n  const [assignmentTitles, setAssignmentTitles] = useState({\n    id: '',\n    classroom: '',\n    title: '',\n    description: '',\n    due_date: ''\n  })\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      viewAssignmentStudent( classroomID,id, token).then((response) => {\n        setAssignmentTitles(prevState => ({\n          ...prevState,\n          id: response.data.id,\n          classroom: response.data.classroom,\n          title: response.data.title,\n          description: response.data.description,\n          due_date: response.data.due_date\n        }));\n      })\n      getUserInfo(token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n      listSubmissionsStudent(classroomID, id, token).then((response) => {\n        setSubmitList(\n          response.data.map((assignment) => <li>\n            {setSubmitID(assignment['id'])}\n            {setSubmitDate(assignment['date'])}\n            {setSubmitFile(assignment['file'])}\n          </li>)\n        )\n      })\n    })\n  }, [])\n\n  return(\n    <div>\n      <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n      <div className = \"StudentPostSubmit\">\n        <div className = \"background\">\n          <p className = \"text\"> assignment information</p>\n          <p className = \"text\"> title: {assignmentTitles.title}</p>\n          <p className = \"text\"> description: {assignmentTitles.description}</p>\n          <p className = \"text\"> due date: {assignmentTitles.due_date}</p>\n          <p className = \"text\"> submission information</p>\n          <p className = \"text\"> current ID:{submitID}</p>\n          <p className = \"text\"> current ID:{submitDate}</p>\n          <p className = \"text\"> current ID:{submitFile}</p>\n          <button onClick={() => {  history.push(`/student/classrooms/${classroomID}/assignments/${id}/submitList`)}}>\n            All assignment\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}","/home/gchristensen/base/repos/avpd/frontend/src/Home.js",[],"/home/gchristensen/base/repos/avpd/frontend/src/About.js",[],"/home/gchristensen/base/repos/avpd/frontend/src/student/StudentHome.js",["115","116"],"import './StudentHome.scss'\nimport {NavBar} from \"../nav/NavBar\";\n\nimport React, {useEffect, useState} from \"react\";\n\nimport {useAuth0} from \"@auth0/auth0-react\";\nimport {useHistory} from \"react-router-dom\";\nimport {getUserInfo, listAssignmentsStudent, joinClassroom} from \"../requests\";\n\nexport function StudentHome(props) {\n  return (\n    <div>\n      <NavBar firstName={props.userData['first_name']} lastName={props.userData['last_name']}/>\n      <Essay />\n    </div>\n  )\n}\n\n//load all essays\nfunction Essay() {\n  const {getAccessTokenSilently} = useAuth0();\n  const history = useHistory()\n  const [essaysTitles, setEssaysTitles] = useState();\n  const [classNumber, setClassNumber] = useState(1);\n\n  function handleSetClassNumber(e) {\n    setClassNumber(e.target.value);\n  }\n\n  //used for scroll down menu for classes\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      listAssignmentsStudent(token, classNumber).then((response) => {\n        setEssaysTitles(\n          response.data.map((data) => <li>\n            <button className=\"assignment-btn\" onClick={() => {\n              history.push(`/student/classrooms/${classNumber}/assignments/${data['id']}`)\n            }}>\n              {data['title']}\n            </button>\n          </li>)\n        )\n      })\n    })\n  }, [classNumber])\n\n  return (\n    <div className = \"Assignments\">\n      <div className = \"background\">\n        <div className = \"Text\">\n          {/*no command for student to get classes to temporary hard code */}\n          <label>Class number input: </label>\n          <select defaultValue={classNumber} onChange={handleSetClassNumber}>\n            <option value = \"1\" > class 1 </option>\n            <option value = \"2\"> class 2 </option>\n            <option value = \"3\"> class 3 </option>\n            <option value = \"10\"> class 10 </option>\n          </select>\n        </div>\n\n        <div className=\"assignment-title\">\n          <div className=\"assignment-background\">\n            <p className=\"assignment-text\">list of assignments</p>\n          </div>\n          <div className=\"assignment-scroll\">\n            <ul className=\"assignment-name\">\n              {essaysTitles}\n            </ul>\n          </div>\n        </div>\n\n        <div>\n        <button onClick={() => {  history.push('/join-classroom')}}>\n          Join Classroom\n        </button>\n\n        </div>\n      </div>\n    </div>\n  )\n}\n\n//function to create assignment\nexport function JoinClassroomForm(props) {\n  const {getAccessTokenSilently} = useAuth0()\n\n  const [id, setID] = useState()\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n\n  const history = useHistory()\n\n  function handleIDChange(event) {\n    setID(event.target.value);\n  }\n\n  function handleSubmit(event) {\n    getAccessTokenSilently().then((token) => {\n      joinClassroom(id, token).then((response) => {\n        history.push('/')\n      }, (error) => console.log(error.response))\n    })\n\n    event.preventDefault()\n  }\n  \n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      getUserInfo(id , token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n    })\n  }, [])\n\n  return (\n    <div>\n      <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n\n      <div className=\"Instructor-Assignment-Create\">\n        <div className=\"form-background\">\n          <div className=\"form-title\">\n            <p className=\"form-text\">Join Classroom</p>\n          </div>\n\n          <form onSubmit={handleSubmit}>\n            <label>\n              classNumber: \n              <input type=\"number\" value={id} onChange={handleIDChange}/>\n            </label>\n            <div>\n              <input type=\"submit\" value=\"Submit\"/>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}","/home/gchristensen/base/repos/avpd/frontend/src/student/PostSubmitList.js",["117","118","119"],"import './PostSubmitList.scss'\nimport React, {useEffect, useState} from \"react\";\nimport {NavBar} from \"../nav/NavBar\";\nimport {getUserInfo, viewAssignmentStudent, listSubmissionsStudent, getFile} from \"../requests\";\nimport {useHistory, useParams} from \"react-router\";\nimport {useAuth0} from \"@auth0/auth0-react\";\n\nexport function PostSubmitList() {\n  const {getAccessTokenSilently} = useAuth0()\n  const history = useHistory()\n  const {classroomID, id} = useParams()\n\n  const [currentFile, setCurrentFile] = useState()\n  const [currentID, setCurrentID] = useState()\n  const [submitList, setSubmitList] = useState();\n\n  const [assignmentTitles, setAssignmentTitles] = useState({\n    id: '',\n    classroom: '',\n    title: '',\n    description: '',\n    due_date: ''\n  })\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      viewAssignmentStudent( classroomID,id, token).then((response) => {\n        setAssignmentTitles(prevState => ({\n          ...prevState,\n          id: response.data.id,\n          classroom: response.data.classroom,\n          title: response.data.title,\n          description: response.data.description,\n          due_date: response.data.due_date\n        }));\n      })\n      getUserInfo(token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n      listSubmissionsStudent(classroomID, id, token).then((response) => {\n        setSubmitList(\n          response.data.map((assignment) => <li>\n            <button onClick={() => {\n              setCurrentID(assignment['id'])\n              setCurrentFile(assignment['file'])\n            }}>\n              id: {assignment['id']} file:{assignment['file']}\n            </button>\n          </li>)\n        )\n      })\n    })\n  }, [])\n\n  return(\n    <div>\n      <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n      <div className = \"StudentPostSubmitList\">\n        <div className = \"background\">\n          <p className = \"text\"> assignment information</p>\n          <p className = \"text\"> title: {assignmentTitles.title}</p>\n          <p className = \"text\"> description: {assignmentTitles.description}</p>\n          <p className = \"text\"> due date: {assignmentTitles.due_date}</p>\n          <p className = \"text\"> current ID:{currentID}</p>\n          <p className = \"text\"> current file:{currentFile}</p>\n          {submitList}\n        </div>\n      </div>\n    </div>\n  )\n}","/home/gchristensen/base/repos/avpd/frontend/src/instructor/InstructorNameList.js",["120","121"],"import './InstructorNameList.scss'\nimport React, {useEffect, useState} from \"react\";\nimport {NavBar} from \"../nav/NavBar\";\nimport {getUserInfo, viewClassroom, listStudents, removeStudentFromClass} from \"../requests\";\nimport {useHistory, useLocation, useParams} from \"react-router\";\nimport {useAuth0} from \"@auth0/auth0-react\";\n\nexport function InstructorNameList() {\n  const {getAccessTokenSilently} = useAuth0()\n  const history = useHistory()\n  const {id} = useParams()\n\n  const [currentStudent, setCurrentStudent] = useState()\n  const [studentList, setStudentList] = useState()\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n  const [classInfo, setClassinfo] = useState({\n    title:''\n  })\n\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      listStudents(id, token).then((response) => {\n        setStudentList(\n          response.data.map((assignment) => <li>\n            <button className=\"list-btn\" onClick={() => {\n              setCurrentStudent(assignment['id'])}\n            }>\n              {assignment['id']}\n            </button>\n          </li>)\n        )\n      })\n      getUserInfo(token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n      viewClassroom(id, token).then((response) => {\n        setClassinfo(prevState => ({\n          ...prevState,\n          title: response.data.title,\n        }));\n      })\n    })\n  }, [])\n\n  return (\n    <div>\n      <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n        <div className=\"Instructor-NameList\">\n          <div className=\"background\">\n            <div className=\"title\">\n              <p className=\"text\">Classroom Students List: {classInfo.title}</p>\n            </div>\n\n            <div className=\"scroll\">\n              <ul className=\"titles\">\n                {studentList}\n              </ul>\n            </div>\n\n            <div className=\"options\">\n\n              <button onClick={() => {\n                getAccessTokenSilently().then((token) => {\n                  removeStudentFromClass(id, currentStudent, token).then(() => history.go(0), (error) => console.log(error.response))\n                }, (error) => console.log(error))\n              }}>Delete Student</button>\n\n              <button onClick={() => {\n                history.push(`/instructor/classrooms/${id}`, {classroomID: id})\n              }}>Return</button>\n\n            </div>\n          </div>\n        </div>\n    </div>\n  )\n}","/home/gchristensen/base/repos/avpd/frontend/src/instructor/InstructorHome.js",["122","123"],"import './InstructorHome.scss'\nimport React, {useEffect, useState} from \"react\";\nimport {useAuth0} from \"@auth0/auth0-react\";\nimport {useHistory} from \"react-router-dom\";\nimport {NavBar} from \"../nav/NavBar\";\nimport {getUserInfo, listClassroom, createClassroom} from \"../requests\";\n\nexport function InstructorHome(props) {\n  return (\n    <div>\n      <Classrooms/>\n    </div>\n  )\n}\n\nfunction Classrooms() {\n  const {getAccessTokenSilently} = useAuth0();\n  const history = useHistory()\n\n  const [classroomTitles, setClassroomTitles] = useState();\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      listClassroom(token).then((response) => {\n        setClassroomTitles(\n          response.data.map((data) => <li>\n            <button className=\"list-btn\" onClick={() => {\n              history.push(`/instructor/classrooms/${data['id']}`)\n            }}>\n              {data['title']}\n            </button>\n          </li>)\n        )\n      })\n      getUserInfo(token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n    })\n  }, [])\n\n  return (\n    <div>\n      <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n\n      <div className=\"Instructor-Classrooms\">\n        <div className=\"background\">\n          <div className=\"title\">\n            <p className=\"text\">Instructor Home</p>\n          </div>\n          <div className=\"scroll\">\n            <ul className=\"list-titles\">\n              {classroomTitles}\n            </ul>\n          </div>\n          <div className=\"options\">\n            <button onClick={() => {  history.push('/create-classroom')}}>\n              Create Classroom\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport function CreateClassroomForm() {\n  const {getAccessTokenSilently} = useAuth0();\n  const history = useHistory()\n\n  const [title, setTitle] = useState(\"\");\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n\n  function handleChange(event) {\n    setTitle(event.target.value);\n  }\n\n  function handleSubmit(event) {\n    getAccessTokenSilently().then((token) => {\n      createClassroom(title, token).then((response) => {\n        history.push('/')\n      }, (error) => console.log(error.response))\n    })\n\n    event.preventDefault()\n  }\n\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      getUserInfo(token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n    })\n  }, [])\n\n  return (\n  <div>\n    <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n\n    <div className=\"Instructor-Classroom-Create\">\n      <div className=\"form-background\">\n        <div className=\"form-title\">\n          <p className=\"form-text\">Create Classroom</p>\n        </div>\n\n        <form onSubmit={handleSubmit}>\n          <label>\n            Title: <input type=\"text\" value={title} onChange={handleChange}/>\n          </label>\n          <input type=\"submit\" value=\"Submit\"/>\n        </form>\n      </div>\n    </div>\n  </div>\n  )\n}","/home/gchristensen/base/repos/avpd/frontend/src/instructor/ReportScreen.js",[],"/home/gchristensen/base/repos/avpd/frontend/src/Message/MessageHome.js",[],"/home/gchristensen/base/repos/avpd/frontend/src/instructor/InstructorClassroom.js",["124","125","126"],"import './InstructorClassrooms.scss'\nimport React, {useEffect, useState} from \"react\";\nimport {NavBar} from \"../nav/NavBar\";\nimport {getUserInfo, viewClassroom, listAssignments, createAssignment, deleteClassroom, updateClassroom} from \"../requests\";\nimport {useHistory, useLocation, useParams} from \"react-router\";\nimport {useAuth0} from \"@auth0/auth0-react\";\n\nexport function InstructorClassroom() {\n  const {getAccessTokenSilently} = useAuth0()\n  const history = useHistory()\n  const {id} = useParams()\n\n  const [assignmentTitles, setAssignmentTitles] = useState()\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n  const [classInfo, setClassinfo] = useState({\n    title:''\n  })\n\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      listAssignments(id, token).then((response) => {\n        setAssignmentTitles(\n          response.data.map((assignment) => <li>\n            <button className=\"list-btn\" onClick={() => {\n              history.push(`/instructor/classrooms/${id}/assignments/${assignment['id']}`)\n            }}>\n              {assignment['title']}\n            </button>\n          </li>)\n        )\n      })\n      getUserInfo(token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n      viewClassroom(id, token).then((response) => {\n        setClassinfo(prevState => ({\n          ...prevState,\n          title: response.data.title,\n        }));\n      })\n    })\n  }, [])\n\n  return (\n    <div>\n      <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n\n        <div className=\"Instructor-Assignment\">\n          <div className=\"background\">\n            <div className=\"title\">\n              <p className=\"text\">Classroom: {classInfo.title}</p>\n            </div>\n\n            <div className=\"scroll\">\n              <ul className=\"titles\">\n                {assignmentTitles}\n              </ul>\n            </div>\n\n            <div className=\"options\">\n\n              <button onClick={() => {\n                history.push(`/update-classroom`, {classID: id})\n              }}>Update Classroom</button>\n\n              <button onClick={() => {\n                history.push(`/instructor/classrooms/${id}/students`, {classroomID: id})\n              }}>List Students</button>\n\n              <button onClick={() => {\n                getAccessTokenSilently().then((token) => {\n                deleteClassroom(id, token).then(() => history.push('/'), (error) => console.log(error.response))\n                }, (error) => console.log(error))\n              }}>Delete</button>\n\n              <button onClick={() => {\n                history.push(`/create-assignment`, {classroomID: id})\n              }}>Create Assignment</button>\n\n            </div>\n          </div>\n        </div>\n    </div>\n  )\n}\n\n//form to update classroom\nexport function UpdateClassroomForm() {\n  const {getAccessTokenSilently} = useAuth0();\n  const history = useHistory()\n  const location = useLocation()\n  const id = location.state.classID\n\n  const [title, setTitle] = useState(\"\");\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n\n  function handleChange(event) {\n    setTitle(event.target.value);\n  }\n\n  function handleSubmit(event) {\n    getAccessTokenSilently().then((token) => {\n      updateClassroom(title, id, token).then((response) => {\n        history.push('/')\n      }, (error) => console.log(error.response))\n    })\n\n    event.preventDefault()\n  }\n\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      getUserInfo(token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n    })\n  }, [])\n\n  return (\n  <div>\n    <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n\n    <div className=\"Instructor-Classroom-Create\">\n      <div className=\"form-background\">\n        <div className=\"form-title\">\n          <p className=\"form-text\">Update Classroom</p>\n        </div>\n\n        <form onSubmit={handleSubmit}>\n          <label>\n            Title: <input type=\"text\" value={title} onChange={handleChange}/>\n          </label>\n          <input type=\"submit\" value=\"Submit\"/>\n        </form>\n      </div>\n    </div>\n  </div>\n  )\n}\n\n//function to create assignment\nexport function CreateAssignmentForm(props) {\n  const location = useLocation()\n  const id = location.state.classroomID\n\n  const [title, setTitle] = useState(\"\")\n  const [description, setDescription] = useState(\"\")\n  const [dueYear, setDueYear] = useState(\"\")\n  const [dueMonth, setDueMonth] = useState(\"\")\n  const [dueDay, setDueDay] = useState(\"\")\n  const [dueHour, setDueHour] = useState(\"\")\n  const [dueMinute, setDueMinute] = useState(\"\")\n  const {getAccessTokenSilently} = useAuth0()\n\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n\n  const history = useHistory()\n\n  function handleTitleChange(event) {\n    setTitle(event.target.value);\n  }\n\n  function handleDescriptionChange(event) {\n    setDescription(event.target.value)\n  }\n\n  function handleDueYearChange(event) {\n    setDueYear(event.target.value)\n  }\n\n  function handleDueMonthChange(event) {\n    setDueMonth(event.target.value)\n  }\n\n  function handleDueDayChange(event) {\n    setDueDay(event.target.value)\n  }\n\n  function handleDueHourChange(event) {\n    setDueHour(event.target.value)\n  }\n\n  function handleDueMinuteChange(event) {\n    setDueMinute(event.target.value)\n  }\n\n  function handleSubmit(event) {\n    getAccessTokenSilently().then((token) => {\n      createAssignment(id, title, description, {\n        'year': parseInt(dueYear),\n        'month': parseInt(dueMonth),\n        'day': parseInt(dueDay),\n        'hour': parseInt(dueHour),\n        'minute': parseInt(dueMinute)\n      }, token).then((response) => {\n        history.push(`/instructor/classrooms/${id}`)\n      }, (error) => console.log(error.response))\n    })\n\n    event.preventDefault()\n  }\n\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      getUserInfo(token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n    })\n  }, [])\n\n  return (\n    <div>\n      <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n\n      <div className=\"Instructor-Assignment-Create\">\n        <div className=\"form-background\">\n          <div className=\"form-title\">\n            <p className=\"form-text\">Create Assignment</p>\n          </div>\n\n          <form onSubmit={handleSubmit}>\n            <label>\n              Title:\n              <input type=\"text\" value={title} onChange={handleTitleChange}/>\n            </label>\n            <div/>\n            <label>\n              Description:\n              <input type=\"text\" value={description} onChange={handleDescriptionChange}/>\n            </label>\n            <p>Due Date:</p>\n            <label>\n              Year:\n              <input type=\"text\" value={dueYear} onChange={handleDueYearChange}/>\n            </label>\n            <label>\n              Month:\n              <input type=\"text\" value={dueMonth} onChange={handleDueMonthChange}/>\n            </label>\n            <label>\n              Day:\n              <input type=\"text\" value={dueDay} onChange={handleDueDayChange}/>\n            </label>\n            <label>\n              Hour:\n             <input type=\"text\" value={dueHour} onChange={handleDueHourChange}/>\n            </label>\n            <label>\n              Minute:\n              <input type=\"text\" value={dueMinute} onChange={handleDueMinuteChange}/>\n            </label>\n            <div>\n              <input type=\"submit\" value=\"Submit\"/>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}","/home/gchristensen/base/repos/avpd/frontend/src/instructor/InstructorSubmissions.js",["127","128","129"],"import './InstructorSubmissions.scss'\nimport React, {useEffect, useState} from \"react\";\nimport {NavBar} from \"../nav/NavBar\";\nimport {getUserInfo, viewAssignment, listSubmissions} from \"../requests\";\nimport {useHistory, useLocation, useParams} from \"react-router\";\nimport {useAuth0} from \"@auth0/auth0-react\";\n\nexport function InstructorSubmissionsList() {\n  const {getAccessTokenSilently} = useAuth0()\n  const history = useHistory()\n  const {id, classroomID} = useParams()\n  \n  const [currentStudent, setCurrentStudent] = useState()\n  const [submissionList, setSubmissionList] = useState()\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n  const [assignmentInfo, setAssignmentinfo] = useState({\n    title:''\n  })\n\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      getUserInfo(token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n      viewAssignment(classroomID, id, token).then((response) => {\n        setAssignmentinfo(prevState => ({\n          ...prevState,\n          title: response.data.title,\n        }));\n      })\n      listSubmissions(classroomID, id, token).then((response) => {\n        setSubmissionList(\n          response.data.map((assignment) => <li>\n            <button className=\"list-btn\" onClick={() => {history.push(`/instructor/classrooms/${classroomID}/assignments/${id}/submissions/${assignment['id']}/report`)}\n            }>\n              {assignment['id']}\n            </button>\n          </li>)\n        )\n      })\n    })\n\n  }, [])\n\n  return (\n    <div>\n      <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n        <div className=\"Instructor-SubmissionsList\">\n          <div className=\"background\">\n            <div className=\"title\">\n              <p className=\"text\">List of assignment submissions: {assignmentInfo.title} ; current Student: {currentStudent}</p>\n            </div>\n\n            <div className=\"scroll\">\n              <ul className=\"titles\">\n                {submissionList}\n              </ul>\n            </div>\n\n            <div className=\"options\">\n\n            </div>\n          </div>\n        </div>\n    </div>\n  )\n}\n","/home/gchristensen/base/repos/avpd/frontend/src/instructor/InstructorAssignment.js",["130","131"],"import './InstructorAssignment.scss'\nimport React, {useEffect, useState} from \"react\";\nimport {NavBar} from \"../nav/NavBar\";\nimport {getUserInfo, deleteAssignment, updateAssignment, viewAssignment} from \"../requests\";\nimport {useHistory, useLocation, useParams} from \"react-router\";\nimport {useAuth0} from \"@auth0/auth0-react\";\n\nexport function InstructorAssignment() {\n  const {getAccessTokenSilently} = useAuth0()\n  const history = useHistory()\n  const {classroomID, id} = useParams()\n\n  const [assignmentTitles, setAssignmentTitles] = useState({\n    id: '',\n    classroom: '',\n    title: '',\n    description: '',\n    due_date: ''\n  })\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      viewAssignment( classroomID,id, token).then((response) => {\n        setAssignmentTitles(prevState => ({\n          ...prevState,\n          id: response.data.id,\n          classroom: response.data.classroom,\n          title: response.data.title,\n          description: response.data.description,\n          due_date: response.data.due_date\n        }));\n      })\n      getUserInfo(token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n    })\n  }, [])\n\n  return (\n    <div>\n      <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n\n      <div className = \"Instructor-Assignment-Info\">\n        <div className=\"background\">\n          <div className=\"title\">\n            <p className=\"text\">Assignment Info</p>\n          </div>\n\n          <div className=\"body-text\">\n            <p className = \"text\"> title: {assignmentTitles.title}</p>\n            <p className = \"text\"> due date: {assignmentTitles.due_date}</p>\n            <p className = \"text\"> description: {assignmentTitles.description}</p>\n          </div>\n\n          <div className=\"options-test\">\n\n            <button onClick={() => {\n              history.push(`/instructor/classrooms/${classroomID}/assignments/${id}/submissions`)\n            }}>List Submissions</button>\n\n            <button onClick={() => {\n              getAccessTokenSilently().then((token) => {\n              deleteAssignment(classroomID, id, token).then(() =>\n              history.push('/instructor/classroom/1'), (error) => console.log(error.response))\n              }, (error) => console.log(error))\n            }}>Delete</button>\n\n            <button onClick={() => {\n              history.push('/update-assignment', \n              {classroomID: assignmentTitles.id,\n              assignmentID: assignmentTitles.classroom})\n            }}>Update Assignment</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport function UpdateAssignmentForm(props) {\n  const location = useLocation()\n\n  const Cid = location.state.classroomID\n  const Aid = location.state.assignmentID\n\n  const [assignmentTitles, setAssignmentTitles] = useState({\n    id: '',\n    classroom: '',\n    title: '',\n    description: '',\n    due_date: ''\n  })\n  const [userInfo, setUserInfo] = useState({\n    first_name:'',\n    last_name:''\n  })\n\n  useEffect(() => {\n    getAccessTokenSilently().then((token) => {\n      viewAssignment( Cid, Aid, token).then((response) => {\n        setAssignmentTitles(prevState => ({\n          ...prevState,\n          id: response.data.id,\n          classroom: response.data.classroom,\n          title: response.data.title,\n          description: response.data.description,\n          due_date: response.data.due_date\n        }));\n      })\n      getUserInfo(token).then((response) => {\n        setUserInfo(prevState => ({\n          ...prevState,\n          first_name: response.data.first_name,\n          last_name: response.data.last_name          \n        }));\n      })\n    })\n    setTitle(assignmentTitles.title)\n    setDescription(assignmentTitles.description)\n  }, [])\n\n  const [title, setTitle] = useState(\"\")\n  const [description, setDescription] = useState(\"\")\n  const [dueYear, setDueYear] = useState(\"\")\n  const [dueMonth, setDueMonth] = useState(\"\")\n  const [dueDay, setDueDay] = useState(\"\")\n  const [dueHour, setDueHour] = useState(\"\")\n  const [dueMinute, setDueMinute] = useState(\"\")\n  const {getAccessTokenSilently} = useAuth0()\n\n  const history = useHistory()\n\n  function handleTitleChange(event) {\n    setTitle(event.target.value);\n  }\n\n  function handleDescriptionChange(event) {\n    setDescription(event.target.value)\n  }\n\n  function handleDueYearChange(event) {\n    setDueYear(event.target.value)\n  }\n\n  function handleDueMonthChange(event) {\n    setDueMonth(event.target.value)\n  }\n\n  function handleDueDayChange(event) {\n    setDueDay(event.target.value)\n  }\n\n  function handleDueHourChange(event) {\n    setDueHour(event.target.value)\n  }\n\n  function handleDueMinuteChange(event) {\n    setDueMinute(event.target.value)\n  }\n\n  function handleSubmit(event) {\n    getAccessTokenSilently().then((token) => {\n      updateAssignment(Cid, Aid, title, description, {\n        'year': parseInt(dueYear),\n        'month': parseInt(dueMonth),\n        'day': parseInt(dueDay),\n        'hour': parseInt(dueHour),\n        'minute': parseInt(dueMinute)\n      }, token).then((response) => {\n        history.push(`/instructor/classrooms/${Aid}/assignments/${Cid}`)\n      }, (error) => console.log(error.response))\n    })\n    event.preventDefault()\n  }\n\n  return (\n    <div>\n      <NavBar firstName={userInfo.first_name} lastName={userInfo.last_name}/>\n\n      <div className=\"Instructor-Assignment-Update\">\n        <div className=\"form-background\">\n          <div className=\"form-title\">\n            <p className=\"form-text\">Update Assignment</p>\n          </div>\n\n\n          <form onSubmit={handleSubmit}>\n            <label>\n              Title:\n              <input type=\"text\" value={title} onChange={handleTitleChange}/>\n            </label>\n            <div/>\n            <label>\n              Description:\n              <input type=\"text\" value={description} onChange={handleDescriptionChange}/>\n            </label>\n            <p>Due Date:</p>\n            <label>\n              Year:\n              <input type=\"text\" value={dueYear} onChange={handleDueYearChange}/>\n            </label>\n            <label>\n              Month:\n              <input type=\"text\" value={dueMonth} onChange={handleDueMonthChange}/>\n            </label>\n            <label>\n              Day:\n              <input type=\"text\" value={dueDay} onChange={handleDueDayChange}/>\n            </label>\n            <label>\n              Hour:\n             <input type=\"text\" value={dueHour} onChange={handleDueHourChange}/>\n            </label>\n            <label>\n              Minute:\n              <input type=\"text\" value={dueMinute} onChange={handleDueMinuteChange}/>\n            </label>\n            <div>\n              <input type=\"submit\" value=\"Submit\"/>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}","/home/gchristensen/base/repos/avpd/frontend/src/requests.js",[],"/home/gchristensen/base/repos/avpd/frontend/src/nav/NavBar.js",[],"/home/gchristensen/base/repos/avpd/frontend/src/user/logout-button.js",[],"/home/gchristensen/base/repos/avpd/frontend/src/utils.js",["132"],"import {useAuth0} from \"@auth0/auth0-react\";\n\nexport function serverUrl() {\n  return process.env.REACT_APP_SERVER_URL;\n}\n\nexport async function authenticateRequest(requestConfig, token) {\n  requestConfig.headers = {\n    'Authorization': `Bearer ${token}`\n  }\n\n  return requestConfig\n}","/home/gchristensen/base/repos/avpd/frontend/src/user/login-button.js",[],["133","134"],{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":7,"column":9,"nodeType":"141","messageId":"142","endLine":7,"endColumn":20},{"ruleId":"139","severity":1,"message":"143","line":14,"column":7,"nodeType":"141","messageId":"142","endLine":14,"endColumn":11},{"ruleId":"139","severity":1,"message":"144","line":17,"column":7,"nodeType":"141","messageId":"142","endLine":17,"endColumn":12},{"ruleId":"139","severity":1,"message":"145","line":19,"column":10,"nodeType":"141","messageId":"142","endLine":19,"endColumn":16},{"ruleId":"146","severity":1,"message":"147","line":54,"column":6,"nodeType":"148","endLine":54,"endColumn":8,"suggestions":"149"},{"ruleId":"150","severity":1,"message":"151","line":61,"column":38,"nodeType":"152","messageId":"153","endLine":61,"endColumn":40},{"ruleId":"146","severity":1,"message":"154","line":69,"column":6,"nodeType":"148","endLine":69,"endColumn":8,"suggestions":"155"},{"ruleId":"139","severity":1,"message":"156","line":4,"column":69,"nodeType":"141","messageId":"142","endLine":4,"endColumn":90},{"ruleId":"139","severity":1,"message":"157","line":13,"column":10,"nodeType":"141","messageId":"142","endLine":13,"endColumn":20},{"ruleId":"146","severity":1,"message":"147","line":58,"column":6,"nodeType":"148","endLine":58,"endColumn":8,"suggestions":"158"},{"ruleId":"146","severity":1,"message":"159","line":45,"column":6,"nodeType":"148","endLine":45,"endColumn":19,"suggestions":"160"},{"ruleId":"146","severity":1,"message":"161","line":119,"column":6,"nodeType":"148","endLine":119,"endColumn":8,"suggestions":"162"},{"ruleId":"139","severity":1,"message":"163","line":4,"column":69,"nodeType":"141","messageId":"142","endLine":4,"endColumn":76},{"ruleId":"139","severity":1,"message":"164","line":10,"column":9,"nodeType":"141","messageId":"142","endLine":10,"endColumn":16},{"ruleId":"146","severity":1,"message":"147","line":61,"column":6,"nodeType":"148","endLine":61,"endColumn":8,"suggestions":"165"},{"ruleId":"139","severity":1,"message":"166","line":5,"column":21,"nodeType":"141","messageId":"142","endLine":5,"endColumn":32},{"ruleId":"146","severity":1,"message":"161","line":50,"column":6,"nodeType":"148","endLine":50,"endColumn":8,"suggestions":"167"},{"ruleId":"146","severity":1,"message":"159","line":47,"column":6,"nodeType":"148","endLine":47,"endColumn":8,"suggestions":"168"},{"ruleId":"146","severity":1,"message":"169","line":108,"column":6,"nodeType":"148","endLine":108,"endColumn":8,"suggestions":"170"},{"ruleId":"146","severity":1,"message":"171","line":49,"column":6,"nodeType":"148","endLine":49,"endColumn":8,"suggestions":"172"},{"ruleId":"146","severity":1,"message":"169","line":131,"column":6,"nodeType":"148","endLine":131,"endColumn":8,"suggestions":"173"},{"ruleId":"146","severity":1,"message":"169","line":230,"column":6,"nodeType":"148","endLine":230,"endColumn":8,"suggestions":"174"},{"ruleId":"139","severity":1,"message":"166","line":5,"column":21,"nodeType":"141","messageId":"142","endLine":5,"endColumn":32},{"ruleId":"139","severity":1,"message":"175","line":13,"column":26,"nodeType":"141","messageId":"142","endLine":13,"endColumn":43},{"ruleId":"146","severity":1,"message":"176","line":50,"column":6,"nodeType":"148","endLine":50,"endColumn":8,"suggestions":"177"},{"ruleId":"146","severity":1,"message":"147","line":45,"column":6,"nodeType":"148","endLine":45,"endColumn":8,"suggestions":"178"},{"ruleId":"146","severity":1,"message":"179","line":128,"column":6,"nodeType":"148","endLine":128,"endColumn":8,"suggestions":"180"},{"ruleId":"139","severity":1,"message":"181","line":1,"column":9,"nodeType":"141","messageId":"142","endLine":1,"endColumn":17},{"ruleId":"135","replacedBy":"182"},{"ruleId":"137","replacedBy":"183"},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"no-unused-vars","'MessageHome' is defined but never used.","Identifier","unusedVar","'date' is assigned a value but never used.","'hours' is assigned a value but never used.","'onTime' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'classroomID', 'getAccessTokenSilently', and 'id'. Either include them or remove the dependency array.","ArrayExpression",["186"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'assignmentTitles.due_date', 'month', and 'year'. Either include them or remove the dependency array.",["187"],"'viewSubmissionStudent' is defined but never used.","'submitList' is assigned a value but never used.",["188"],"React Hook useEffect has missing dependencies: 'getAccessTokenSilently' and 'history'. Either include them or remove the dependency array.",["189"],"React Hook useEffect has missing dependencies: 'getAccessTokenSilently' and 'id'. Either include them or remove the dependency array.",["190"],"'getFile' is defined but never used.","'history' is assigned a value but never used.",["191"],"'useLocation' is defined but never used.",["192"],["193"],"React Hook useEffect has a missing dependency: 'getAccessTokenSilently'. Either include it or remove the dependency array.",["194"],"React Hook useEffect has missing dependencies: 'getAccessTokenSilently', 'history', and 'id'. Either include them or remove the dependency array.",["195"],["196"],["197"],"'setCurrentStudent' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'classroomID', 'getAccessTokenSilently', 'history', and 'id'. Either include them or remove the dependency array.",["198"],["199"],"React Hook useEffect has missing dependencies: 'Aid', 'Cid', 'assignmentTitles.description', 'assignmentTitles.title', and 'getAccessTokenSilently'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setTitle' needs the current value of 'assignmentTitles.title'.",["200"],"'useAuth0' is defined but never used.",["184"],["185"],"no-global-assign","no-unsafe-negation",{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},{"desc":"201","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"201","fix":"210"},{"desc":"208","fix":"211"},{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"214","fix":"218"},{"desc":"214","fix":"219"},{"desc":"220","fix":"221"},{"desc":"201","fix":"222"},{"desc":"223","fix":"224"},"Update the dependencies array to be: [classroomID, getAccessTokenSilently, id]",{"range":"225","text":"226"},"Update the dependencies array to be: [assignmentTitles.due_date, month, year]",{"range":"227","text":"228"},{"range":"229","text":"226"},"Update the dependencies array to be: [classNumber, getAccessTokenSilently, history]",{"range":"230","text":"231"},"Update the dependencies array to be: [getAccessTokenSilently, id]",{"range":"232","text":"233"},{"range":"234","text":"226"},{"range":"235","text":"233"},"Update the dependencies array to be: [getAccessTokenSilently, history]",{"range":"236","text":"237"},"Update the dependencies array to be: [getAccessTokenSilently]",{"range":"238","text":"239"},"Update the dependencies array to be: [getAccessTokenSilently, history, id]",{"range":"240","text":"241"},{"range":"242","text":"239"},{"range":"243","text":"239"},"Update the dependencies array to be: [classroomID, getAccessTokenSilently, history, id]",{"range":"244","text":"245"},{"range":"246","text":"226"},"Update the dependencies array to be: [Aid, Cid, assignmentTitles.description, assignmentTitles.title, getAccessTokenSilently]",{"range":"247","text":"248"},[1798,1800],"[classroomID, getAccessTokenSilently, id]",[2228,2230],"[assignmentTitles.due_date, month, year]",[1906,1908],[1296,1309],"[classNumber, getAccessTokenSilently, history]",[3304,3306],"[getAccessTokenSilently, id]",[1949,1951],[1554,1556],[1290,1292],"[getAccessTokenSilently, history]",[2833,2835],"[getAccessTokenSilently]",[1593,1595],"[getAccessTokenSilently, history, id]",[3914,3916],[6478,6480],[1674,1676],"[classroomID, getAccessTokenSilently, history, id]",[1400,1402],[3994,3996],"[Aid, Cid, assignmentTitles.description, assignmentTitles.title, getAccessTokenSilently]"]